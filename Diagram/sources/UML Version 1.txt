digraph G {
	node[shape=record,style=filled,fillcolor=gray95];
	edge[dir=back, arrowtail=empty, concentrate=true];
	graph[splines = ortho, ranksep = 1, ratio = fill];
rankdir = TB;
	n1 [label = <{JUnitTest||?test() : test}>];
	n2 [label = <{Library|-HashMap&lt;Integer, ArrayList&lt;String&gt;&gt; : users<BR/>-HashMap&lt;Integer, ArrayList&lt;String&gt;&gt; : materials<BR/>-HashMap&lt;String, Integer&gt; : organizationFines|+Library() : Library<BR/>+stockMaterial(materialId : int, type : int) : boolean<BR/>+stockMaterial(materialId : int, info : ArrayList&lt;String&gt;) : boolean<BR/>+enrolUser(userId : int, organization : String) : boolean<BR/>+enrolUser(userId : int, info : ArrayList&lt;String&gt;) : boolean<BR/>+addOrganization(organization : String) : boolean<BR/>+checkoutMaterial(userId : int, materialId : int) : boolean<BR/>+returnMaterial(userId : int, materialId : int) : boolean<BR/>+payFee(organization : String, amount : int) : boolean<BR/>+displayLibrary() : void<BR/>-libraryInputCommands() : void<BR/>+getOrganizationFine(organization : String) : Integer<BR/>-addMaterialToUser(userId : int, materialId : int) : void<BR/>-validateCheckout(info : ArrayList&lt;String&gt;, materialId : int) : boolean<BR/>-elapsedCheckoutTime(materialId : int) : int<BR/>-configureUser(userId : int, organization : String) : ArrayList&lt;String&gt;<BR/>-configureMaterial(materialId : int, type : int) : ArrayList&lt;String&gt;<BR/>-indexOf(array : String[], key : String) : int}>];

	subgraph cluster_version1{
		label = "version1";
		fontsize = 30;
		penwidth = 1;
		subgraph cluster_version1_example{
			label = "version1.example";
			fontsize = 26;
			penwidth = 2;
			n2;
	}
}
	subgraph cluster_version1{
		label = "version1";
		fontsize = 30;
		penwidth = 1;
		subgraph cluster_version1_test{
			label = "version1.test";
			fontsize = 26;
			penwidth = 2;
			n1;
	}
}

	n1 -> n2;
	}