digraph G {
	node[shape=record,style=filled,fillcolor=gray95];
	edge[concentrate=true];
	graph[splines = ortho, ranksep = 1, ratio = fill, color=blue];
	rankdir = TB;

	n0 [label = <{JohnSmith|-ArrayList&lt;Lantern&gt; : relevantTiles|+JohnSmith()}>];
	n1 [label = <{<i>Player</i>||+getAlibis() : ArrayList&lt;GameCharacter&gt;<BR/>+assignMrJack(inJack : GameCharacter) : void}>];
	n2 [label = <{Lantern||+Lantern(loc : int)<BR/>+getLight() : boolean<BR/>+setLight(val : boolean) : void}>];
	n3 [label = <{SirWilliamGullTest||}>];
	n4 [label = <{clickComponent|-int : activeSelect<BR/>-ArrayList&lt;Integer[]&gt; : eventSquare<BR/>-InteractFrame : containerFrame|+clickComponent()<BR/>+getSelected() : int<BR/>+resetSelected() : void<BR/>+setEventSquare(updated : ArrayList&lt;Integer[]&gt;) : void<BR/>+setParentFrame(reference : InteractFrame) : void<BR/>+addClickRegion(values : Integer[]) : void<BR/>+resetClickRegion() : void<BR/>+mouseClicked(e : MouseEvent) : void<BR/>+mouseReleased(e : MouseEvent) : void<BR/>+mouseEntered(e : MouseEvent) : void<BR/>+mousePressed(e : MouseEvent) : void<BR/>+mouseExited(e : MouseEvent) : void}>];
	n5 [label = <{keyComponent|+int : activeSelect<BR/>+InteractFrame : containerFrame|+keyComponent()<BR/>+getSelected() : int<BR/>+resetSelected() : void<BR/>+setParentFrame(reference : InteractFrame) : void<BR/>+keyPressed(e : KeyEvent) : void<BR/>+keyReleased(e : KeyEvent) : void<BR/>+keyTyped(e : KeyEvent) : void}>];
	n6 [label = <{InspectorAbberline|-GameCharacter[] : charactersInPlay<BR/>-boolean[] : restrictedMovementChars|+InspectorAbberline()<BR/>+removeRestrictions() : void}>];
	n7 [label = <{<i>MrJackCharacterDec</i>|#GameCharacter : character|+MrJackCharacterDec(mrJackChar : GameCharacter)<BR/>+removeDecorator() : GameCharacter}>];
	n8 [label = <{Detective||+Detective()<BR/>+hasWonAccusation(accused : GameCharacter) : boolean}>];
	n9 [label = <{MissStealthy||+MissStealthy()<BR/>+canMove(tile : Tile, dist : int) : boolean}>];
	n10 [label = <{Madame||+Madame()}>];
	n11 [label = <{SirWilliamGull|-GameCharacter[] : characters|+SirWilliamGull()}>];
	n12 [label = <{DrawnTile||+DrawnTile(inX : double, inY : double, label : String, loc : int)<BR/>+getX() : double<BR/>+getY() : double<BR/>+getType() : String<BR/>+getIndex() : int<BR/>+getState() : boolean<BR/>+setX(in : double) : void<BR/>+setY(in : double) : void<BR/>+setType(in : String) : void<BR/>+setState(in : boolean) : void}>];
	n13 [label = <{<i>MrJackCharacter</i>|#Tile : tileIndex<BR/>#String : name<BR/>#int : numMoves<BR/>#boolean : isSuspect<BR/>#boolean : isLit<BR/>#String : shortName|+canMove(start : Tile, end : Tile, distance : int) : boolean<BR/>+canInteract(tile : Tile) : boolean<BR/><u>+ability(choice : Tile...) : boolean</u><BR/><u>+deriveFromModel(model : GameModel) : void</u><BR/>+convertToOutboundFormat() : String<BR/>+getLit() : boolean<BR/>+getSuspect() : boolean<BR/>+getLocation() : int<BR/>+getTileLocation() : Tile<BR/>+getName() : String<BR/>+getDistance() : int<BR/>+getShortName() : String<BR/>+setLit(in : boolean) : void<BR/>+setSuspect(in : boolean) : void<BR/>+setLocation(index : Tile) : void<BR/>+requiredValuesForAbility() : int<BR/>+abilityPermissionArray() : boolean[]<BR/>+hasToDoAbility() : boolean<BR/>+canDoAbilityBefore() : boolean<BR/>+canDoAbilityDuring() : boolean<BR/>+canDoAbilityAfter() : boolean<BR/>+canMoveAfterAbility() : boolean}>];
	n14 [label = <{Clock||+Clock(givenLanterns : Tile[], lanternLimit : int, lanternsOffStart : int)<BR/>+iterateTurn() : void<BR/>+convertToOutboundFormat() : String<BR/>+getTurn() : int<BR/>-manageLanterns() : void}>];
	n15 [label = <{<i>Tile</i>||+assignNeighbors(in : int[]) : void<BR/>+setBarricade(index : int) : void<BR/>+getNeighbors() : int[]<BR/>+getIdentity() : char<BR/>+canShare() : boolean<BR/>+getLocation() : int<BR/>+getBarricade() : int}>];
	n16 [label = <{RestrictedMovementDec||+RestrictedMovementDec(mrJackChar : GameCharacter)}>];
	n17 [label = <{Board||+Board(boardDesign : String[])<BR/>+getLegalMovements(activeCharacter : GameCharacter, characterLocations : int[]) : boolean[]<BR/>+convertToOutboundFormat() : String<BR/>+getTileAtLocation(index : int) : Tile<BR/>+getTilesOfType(tileType : char) : Tile[]<BR/>+getTileIdentity(index : int) : char<BR/>+getLitTiles(charLocations : int[]) : boolean[]<BR/>+getTiles(indices : int[]) : Tile[]<BR/>+getNumberOfTiles() : int<BR/>+getBarricadeTiles() : int[]<BR/>-initializeTile(newTileInfo : String) : Tile}>];
	n18 [label = <{GameView||+GameView(reference : GameController)<BR/>+update(code : String) : void<BR/>+paintComponent(g : Graphics) : void<BR/>-menuEvent(action : int) : void<BR/>-gameEvent(action : int) : void<BR/>-interfaceEvents(action : int) : void<BR/>-interfaceEventsPlaceCharacter(action : int) : void<BR/>+controllerUpdate() : void<BR/>+allCharactersUsed() : boolean<BR/>-drawMenu(g : Graphics) : void<BR/>-drawBoard(g : Graphics) : void<BR/>-drawBorder(g : Graphics) : void<BR/>-drawClock(g : Graphics) : void<BR/>-drawInteraction(g : Graphics) : void<BR/>-drawInteractionCharacterPlacement(g : Graphics) : void<BR/>-drawTile(g : Graphics, x : int, y : int, hyp : int, type : String, tile : int, state : boolean) : void<BR/>-changeInX(angle : double, hyp : double) : double<BR/>-changeInY(angle : double, hyp : double) : double}>];
	n19 [label = <{JosephLane||+JosephLane()}>];
	n20 [label = <{GameModel||+GameModel(structure : File)<BR/>+startGame() : void<BR/>+placeGameCharacter(character : int, tile : int) : boolean<BR/>+startTurn() : void<BR/>+chooseGameCharacter(choice : int) : boolean<BR/>+moveGameCharacter(choice : int) : boolean<BR/>+characterAction(choice : int[]) : boolean<BR/>+accuseCharacter(choice : int) : boolean<BR/>+endTurn() : boolean<BR/>+resetCharacters() : void<BR/>+getActiveCharacters() : GameCharacter[]<BR/>+clearCurrentCharacter() : void<BR/>+outputGameState() : String<BR/>+getWhoIsPlayer() : String<BR/>+howManyValuesForAction() : int<BR/>+roundOver() : boolean<BR/>+getCharacters() : GameCharacter[]<BR/>+getBoard() : Board<BR/>+getCharacterLocations() : int[]<BR/>-initializeCharacters(chars : GameCharacter[], random : Random) : void<BR/>-initializeCharStatus(m : GameCharacter) : void<BR/>-deriveBoard(structure : String[]) : Board<BR/>-deriveClock() : Clock<BR/>-deriveGameCharacters(potential : GameCharacter[]) : GameCharacter[]<BR/>-removeSuspects() : void<BR/>-characterSetPerTurn(potential : GameCharacter[]) : GameCharacter[]}>];
	n21 [label = <{Exit||+Exit(loca : int)<BR/>+setBlocked(val : boolean) : void<BR/>+getBlocked() : boolean}>];
	n22 [label = <{Road||+Road(loc : int)}>];
	n23 [label = <{InteractFrame|<i>-ArrayList&lt;Integer[]&gt; : eventSquare</i><BR/><i>-clickComponent : mouseEvent</i><BR/><i>-keyComponent : keyPress</i>|+InteractFrame()<BR/>+resetClickEvent() : void<BR/>+clickEvent() : void<BR/>+keyEvent() : void<BR/>+getClickComponent() : clickComponent<BR/>+getKeyComponent() : keyComponent<BR/><i>+retrieveImage(path : String) : Image</i><BR/>+addPic(x : int, y : int, path : String, g : Graphics) : void<BR/>+addPicScaled(x : int, y : int, path : String, g : Graphics, scale : int) : void<BR/>+addClickPic(x : int, y : int, path : String, g : Graphics, key : int) : void<BR/>+addClickPicScaled(x : int, y : int, path : String, g : Graphics, key : int, scale : int) : void<BR/>+addPicScaledCorner(x : int, y : int, path : String, g : Graphics, scale : int) : void<BR/>+addText(x : int, y : int, phrase : String, g : Graphics) : void<BR/>+addOwnTextScaled(x : int, y : int, phrase : String, g : Graphics, scale : int) : void<BR/>+addButton(x : int, y : int, wid : int, hei : int, title : String, col : Color, g : Graphics, key : int) : void<BR/>+addImageButton(x : int, y : int, title : String, filePath : String, g : Graphics, key : int, imageScale : int, textScale : int) : void<BR/>+addShadedRegion(x : int, y : int, wid : int, hei : int, col : Color, g : Graphics) : void<BR/>+addTextField(x : int, y : int, wid : int, hei : int, g : Graphics, key : int) : void<BR/>+drawHexagon(x : int, y : int, distance : int, g : Graphics, col : Color, thick : int) : void}>];
	n24 [label = <{JohnSmithTest||}>];
	n25 [label = <{Building||+Building(loc : int)}>];
	n26 [label = <{InspectorLestradeTest||}>];
	n27 [label = <{MissStealthyTest||}>];
	n28 [label = <{Manhole||+Manhole(loc : int)<BR/>+getCovered() : boolean<BR/>+setCovered(val : boolean) : void<BR/>+assignManholeNeighbors(manholes : Tile[]) : void}>];
	n29 [label = <{GameController||+GameController(f : File)<BR/>+GameController(readIn : InputStream)<BR/>+startMrJack() : void<BR/>+startTurn() : void<BR/>+restartGame() : void<BR/>+updateView() : void<BR/>+placeCharacter(character : int, tile : int) : boolean<BR/>+moveCharacter(newTileLocation : int) : boolean<BR/>+useCharacterAbility(relevantInformation : int[]) : boolean<BR/>+chooseCharacter(tilePosition : int) : boolean<BR/>+restartCharacterUse() : void<BR/>+endTurn() : void<BR/>-endCharacterUse() : boolean<BR/>+canMove() : boolean<BR/>+getHasMovedCharacter() : boolean<BR/>+getUsedAbility() : boolean<BR/>+getSelectedCharacter() : boolean<BR/>+cannotMove() : void<BR/>+cannotDoAbility() : void<BR/><i>+readyFrame() : JFrame</i>}>];
	n30 [label = <{MrJack||+MrJack()<BR/>+whoIsMrJack() : GameCharacter<BR/>+hasWonTimer(isOver : boolean) : boolean<BR/>+hasWonEscape(onExit : boolean, turn : int) : boolean}>];
	n31 [label = <{TimerRefresh|-GameView : parent|+TimerRefresh(par : GameView)<BR/>+run() : void}>];
	n32 [label = <{InspectorLestrade|-ArrayList&lt;Exit&gt; : relevantTiles|+InspectorLestrade()}>];
	n33 [label = <{GameCharacter||+canMove(start : Tile, end : Tile, distance : int) : boolean<BR/>+canInteract(tile : Tile) : boolean<BR/>+ability(choice : Tile...) : boolean<BR/>+deriveFromModel(model : GameModel) : void<BR/>+convertToOutboundFormat() : String<BR/>+getLit() : boolean<BR/>+getSuspect() : boolean<BR/>+getLocation() : int<BR/>+getTileLocation() : Tile<BR/>+getName() : String<BR/>+getDistance() : int<BR/>+getShortName() : String<BR/>+setLit(in : boolean) : void<BR/>+setSuspect(in : boolean) : void<BR/>+setLocation(index : Tile) : void<BR/>+requiredValuesForAbility() : int<BR/>+abilityPermissionArray() : boolean[]<BR/>+hasToDoAbility() : boolean<BR/>+canDoAbilityBefore() : boolean<BR/>+canDoAbilityDuring() : boolean<BR/>+canDoAbilityAfter() : boolean<BR/>+canMoveAfterAbility() : boolean}>];
	subgraph cluster_{
		label = "";
		fontsize = 30;
		penwidth = 1;
		subgraph cluster_controller{
			label = "controller";
			fontsize = 26;
			penwidth = 2;
			n29;
		}
		subgraph cluster_model{
			label = "model";
			fontsize = 26;
			penwidth = 2;
			n20;
			subgraph cluster_model_character{
				label = "model.character";
				fontsize = 22;
				penwidth = 3;
				n33;
				n13;
				n16;
				n7;
				subgraph cluster_model_character_implementation{
					label = "model.character.implementation";
					fontsize = 18;
					penwidth = 4;
					n10;
					n9;
					n11;
					n6;
					n0;
					n19;
					n32;
				}
				subgraph cluster_model_character_test{
					label = "model.character.test";
					fontsize = 18;
					penwidth = 4;
					n24;
					n3;
					n27;
					n26;
				}
			}
			subgraph cluster_model_game{
				label = "model.game";
				fontsize = 22;
				penwidth = 3;
				n17;
				n14;
				n12;
			}
			subgraph cluster_model_player{
				label = "model.player";
				fontsize = 22;
				penwidth = 3;
				n30;
				n1;
				n8;
			}
			subgraph cluster_model_tile{
				label = "model.tile";
				fontsize = 22;
				penwidth = 3;
				n21;
				n22;
				n28;
				n2;
				n15;
				n25;
			}
		}
		subgraph cluster_view{
			label = "view";
			fontsize = 26;
			penwidth = 2;
			n18;
			subgraph cluster_view_visualmechanics{
				label = "view.visualmechanics";
				fontsize = 22;
				penwidth = 3;
				n31;
				n23;
				n4;
				n5;
			}
		}
	}
	n0 -> n13[arrowhead=onormal];
	n0 -> n20[arrowhead=none];
	n0 -> n17[arrowhead=normal];
	n0 -> n2[arrowhead=normal];
	n0 -> n15[arrowhead=normal];
	n0 -> n0[arrowhead=none];
	n0 -> n32[arrowhead=normal];
	n1 -> n33[arrowhead=normal];
	n1 -> n13[arrowhead=normal];
	n1 -> n1[arrowhead=none];
	n2 -> n15[arrowhead=onormal];
	n2 -> n2[arrowhead=none];
	n4 -> n23[arrowhead=none];
	n5 -> n23[arrowhead=none];
	n6 -> n13[arrowhead=onormal];
	n6 -> n20[arrowhead=none];
	n6 -> n33[arrowhead=normal];
	n6 -> n16[arrowhead=normal];
	n6 -> n17[arrowhead=normal];
	n6 -> n21[arrowhead=normal];
	n6 -> n15[arrowhead=normal];
	n6 -> n6[arrowhead=none];
	n7 -> n13[arrowhead=onormal];
	n7 -> n33[arrowhead=normal];
	n8 -> n1[arrowhead=onormal];
	n8 -> n33[arrowhead=normal];
	n8 -> n8[arrowhead=none];
	n9 -> n13[arrowhead=onormal];
	n9 -> n20[arrowhead=none];
	n9 -> n17[arrowhead=normal];
	n9 -> n25[arrowhead=normal];
	n9 -> n15[arrowhead=normal];
	n9 -> n32[arrowhead=normal];
	n9 -> n9[arrowhead=none];
	n10 -> n13[arrowhead=onormal];
	n10 -> n20[arrowhead=none];
	n10 -> n17[arrowhead=normal];
	n10 -> n28[arrowhead=normal];
	n10 -> n15[arrowhead=normal];
	n10 -> n10[arrowhead=none];
	n11 -> n13[arrowhead=onormal];
	n11 -> n20[arrowhead=none];
	n11 -> n33[arrowhead=normal];
	n11 -> n15[arrowhead=normal];
	n11 -> n32[arrowhead=normal];
	n11 -> n11[arrowhead=none];
	n13 -> n20[arrowhead=none];
	n13 -> n15[arrowhead=normal];
	n13 -> n13[arrowhead=none];
	n13 -> n33[arrowhead=onormal, style=dashed];
	n14 -> n2[arrowhead=normal];
	n14 -> n15[arrowhead=normal];
	n14 -> n14[arrowhead=none];
	n15 -> n15[arrowhead=none];
	n16 -> n7[arrowhead=onormal];
	n16 -> n20[arrowhead=normal];
	n16 -> n15[arrowhead=normal];
	n16 -> n33[arrowhead=normal];
	n17 -> n33[arrowhead=normal];
	n17 -> n25[arrowhead=normal];
	n17 -> n21[arrowhead=normal];
	n17 -> n2[arrowhead=normal];
	n17 -> n28[arrowhead=normal];
	n17 -> n22[arrowhead=normal];
	n17 -> n15[arrowhead=normal];
	n17 -> n17[arrowhead=none];
	n18 -> n23[arrowhead=onormal];
	n18 -> n29[arrowhead=none];
	n18 -> n12[arrowhead=normal];
	n18 -> n31[arrowhead=none];
	n19 -> n13[arrowhead=onormal];
	n19 -> n20[arrowhead=none];
	n19 -> n17[arrowhead=normal];
	n19 -> n2[arrowhead=normal];
	n19 -> n15[arrowhead=normal];
	n19 -> n0[arrowhead=normal];
	n19 -> n19[arrowhead=none];
	n20 -> n33[arrowhead=none];
	n20 -> n13[arrowhead=none];
	n20 -> n6[arrowhead=none];
	n20 -> n32[arrowhead=none];
	n20 -> n0[arrowhead=none];
	n20 -> n19[arrowhead=none];
	n20 -> n10[arrowhead=none];
	n20 -> n9[arrowhead=none];
	n20 -> n11[arrowhead=none];
	n20 -> n17[arrowhead=normal];
	n20 -> n14[arrowhead=normal];
	n20 -> n8[arrowhead=normal];
	n20 -> n30[arrowhead=normal];
	n20 -> n20[arrowhead=none];
	n21 -> n15[arrowhead=onormal];
	n21 -> n21[arrowhead=none];
	n22 -> n15[arrowhead=onormal];
	n22 -> n28[arrowhead=normal];
	n23 -> n4[arrowhead=none];
	n23 -> n5[arrowhead=none];
	n23 -> n23[arrowhead=none];
	n25 -> n15[arrowhead=onormal];
	n25 -> n25[arrowhead=none];
	n26 -> n32[arrowhead=normal];
	n26 -> n17[arrowhead=normal];
	n26 -> n15[arrowhead=normal];
	n28 -> n15[arrowhead=onormal];
	n28 -> n28[arrowhead=none];
	n29 -> n20[arrowhead=normal];
	n29 -> n18[arrowhead=none];
	n30 -> n1[arrowhead=onormal];
	n30 -> n33[arrowhead=normal];
	n30 -> n30[arrowhead=none];
	n31 -> n18[arrowhead=none];
	n32 -> n13[arrowhead=onormal];
	n32 -> n20[arrowhead=none];
	n32 -> n17[arrowhead=normal];
	n32 -> n21[arrowhead=normal];
	n32 -> n15[arrowhead=normal];
	n32 -> n32[arrowhead=none];
	n33 -> n20[arrowhead=none];
	n33 -> n15[arrowhead=normal];
	n33 -> n33[arrowhead=none];

}