digraph G {
	node[shape=record,style=filled,fillcolor=gray95];
	edge[dir=back, arrowtail=empty, concentrate=true];
	graph[splines = ortho, ranksep = 1, ratio = fill];
rankdir = TB;
	n1 [label = <{MaximalTesting||<i>+main(args : String[], throws : )) : void</i>}>];
	n2 [label = <{Lantern|?isOn : isOn|+Lantern(loc : int) : Lantern<BR/>+getLight() : boolean<BR/>+setLight(val : boolean) : void}>];
	n3 [label = <{MrJackCharacter|#Tile : tileIndex<BR/>#String : name<BR/>#int : numMoves<BR/>#boolean : isSuspect<BR/>#boolean : isLit<BR/>#String : shortName|+canMove(start : Tile, end : Tile, distance : int) : boolean<BR/>+canInteract(tile : Tile) : boolean<BR/><u>+ability(choice : Tile...) : boolean</u><BR/><u>+deriveFromModel(model : GameModel) : void</u><BR/>+convertToOutboundFormat() : String<BR/>+getLit() : boolean<BR/>+getSuspect() : boolean<BR/>+getLocation() : int<BR/>+getTileLocation() : Tile<BR/>+getName() : String<BR/>+getDistance() : int<BR/>+getShortName() : String<BR/>+setLit(in : boolean) : void<BR/>+setSuspect(in : boolean) : void<BR/>+setLocation(index : Tile) : void<BR/>+requiredValuesForAbility() : int<BR/>+abilityPermissionArray() : boolean[]<BR/>+hasToDoAbility() : boolean<BR/>+canDoAbilityBefore() : boolean<BR/>+canDoAbilityDuring() : boolean<BR/>+canDoAbilityAfter() : boolean<BR/>+canMoveAfterAbility() : boolean}>];
	n4 [label = <{InspectorLestradeTest||+requiredValuesForAbility(throws : )) : void<BR/>+hasToDoAbility(throws : )) : void<BR/>+canDoAbilityBefore(throws : )) : void<BR/>+canDoAbilityDuring(throws : )) : void<BR/>+canDoAbilityAfter(throws : )) : void<BR/>+ability(throws : )) : void<BR/>+canMove(throws : )) : void<BR/>+canInteract(throws : )) : void<BR/>+setLit(throws : )) : void<BR/>+getLit(throws : )) : void<BR/>+setSuspect(throws : )) : void<BR/>+getSuspect(throws : )) : void<BR/>+getLocation(throws : )) : void<BR/>+setLocation(throws : )) : void}>];
	n5 [label = <{MissStealthyTest||+canMove(throws : )) : void<BR/>+requiredValuesForAbility(throws : )) : void<BR/>+hasToDoAbility(throws : )) : void<BR/>+canDoAbilityBefore(throws : )) : void<BR/>+canDoAbilityDuring(throws : )) : void<BR/>+canDoAbilityAfter(throws : )) : void<BR/>+ability(throws : )) : void<BR/>+canMove1(throws : )) : void<BR/>+canInteract(throws : )) : void<BR/>+setLit(throws : )) : void<BR/>+getLit(throws : )) : void<BR/>+setSuspect(throws : )) : void<BR/>+getSuspect(throws : )) : void<BR/>+getLocation(throws : )) : void<BR/>+setLocation(throws : )) : void}>];
	n6 [label = <{MissStealthy||+MissStealthy() : MissStealthy<BR/>+canMove(tile : Tile, dist : int) : boolean}>];
	n7 [label = <{Board||+Board(boardDesign : String[]) : Board<BR/>+getLegalMovements(activeCharacter : GameCharacter, characterLocations : int[]) : boolean[]<BR/>+convertToOutboundFormat() : String<BR/>+getTileAtLocation(index : int) : Tile<BR/>+getTilesOfType(tileType : char) : Tile[]<BR/>+getTileIdentity(index : int) : char<BR/>+getLitTiles(charLocations : int[]) : boolean[]<BR/>+getTiles(indices : int[]) : Tile[]<BR/>+getNumberOfTiles() : int<BR/>+getBarricadeTiles() : int[]<BR/>-initializeTile(newTileInfo : String) : Tile}>];
	n8 [label = <{keyComponent|+int : activeSelect<BR/>+InteractFrame : containerFrame|+keyComponent() : keyComponent<BR/>+getSelected() : int<BR/>+resetSelected() : void<BR/>+setParentFrame(reference : InteractFrame) : void<BR/>+keyPressed(e : KeyEvent) : void<BR/>+keyReleased(e : KeyEvent) : void<BR/>+keyTyped(e : KeyEvent) : void}>];
	n9 [label = <{GameView|?programState : programState<BR/>?gameState : gameState<BR/>?turnNumber : turnNumber<BR/>?currentPlayer : currentPlayer<BR/>?lanternCounter : lanternCounter<BR/>?width : width<BR/>?height : height<BR/>?reachable : reachable<BR/>?lit : lit<BR/>?suspect : suspect<BR/>?abilityPermissions : abilityPermissions<BR/>?logInput : logInput<BR/>?abilityInput : abilityInput<BR/>?barricadeTiles : barricadeTiles<BR/>?characterProgress : }|+GameView(reference : GameController) : GameView<BR/>+update(code : String) : void<BR/>+paintComponent(g : Graphics) : void<BR/>-menuEvent(action : int) : void<BR/>-gameEvent(action : int) : void<BR/>-interfaceEvents(action : int) : void<BR/>-interfaceEventsPlaceCharacter(action : int) : void<BR/>+controllerUpdate() : void<BR/>+allCharactersUsed() : boolean<BR/>-drawMenu(g : Graphics) : void<BR/>-drawBoard(g : Graphics) : void<BR/>-drawBorder(g : Graphics) : void<BR/>-drawClock(g : Graphics) : void<BR/>-drawInteraction(g : Graphics) : void<BR/>-drawInteractionCharacterPlacement(g : Graphics) : void<BR/>-drawTile(g : Graphics, x : int, y : int, hyp : int, type : String, tile : int, state : boolean) : void<BR/>-changeInX(angle : double, hyp : double) : double<BR/>-changeInY(angle : double, hyp : double) : double}>];
	n10 [label = <{GameModel|?gameOver : gameOver<BR/>?player : player|+GameModel(structure : File) : GameModel<BR/>+startGame() : void<BR/>+placeGameCharacter(character : int, tile : int) : boolean<BR/>+startTurn() : void<BR/>+chooseGameCharacter(choice : int) : boolean<BR/>+moveGameCharacter(choice : int) : boolean<BR/>+characterAction(choice : int[]) : boolean<BR/>+accuseCharacter(choice : int) : boolean<BR/>+endTurn() : boolean<BR/>+resetCharacters() : void<BR/>+getActiveCharacters() : GameCharacter[]<BR/>+clearCurrentCharacter() : void<BR/>+outputGameState() : String<BR/>+getWhoIsPlayer() : String<BR/>+howManyValuesForAction() : int<BR/>+roundOver() : boolean<BR/>+getCharacters() : GameCharacter[]<BR/>+getBoard() : Board<BR/>+getCharacterLocations() : int[]<BR/>-initializeCharacters(chars : GameCharacter[], random : Random) : void<BR/>-initializeCharStatus(m : GameCharacter) : void<BR/>-deriveBoard(structure : String[]) : Board<BR/>-deriveClock() : Clock<BR/>-deriveGameCharacters(potential : GameCharacter[]) : GameCharacter[]<BR/>-removeSuspects() : void<BR/>-characterSetPerTurn(potential : GameCharacter[]) : GameCharacter[]}>];
	n11 [label = <{GameController|?choseCharacter : choseCharacter<BR/>?movedCharacter : movedCharacter<BR/>?usedAbility : usedAbility|+GameController(f : File) : GameController<BR/>+GameController(readIn : InputStream, throws : )) : GameController<BR/>+startMrJack() : void<BR/>+startTurn() : void<BR/>+restartGame() : void<BR/>+updateView() : void<BR/>+placeCharacter(character : int, tile : int) : boolean<BR/>+moveCharacter(newTileLocation : int) : boolean<BR/>+useCharacterAbility(relevantInformation : int[]) : boolean<BR/>+chooseCharacter(tilePosition : int) : boolean<BR/>+restartCharacterUse() : void<BR/>+endTurn() : void<BR/>-endCharacterUse() : boolean<BR/>+canMove() : boolean<BR/>+getHasMovedCharacter() : boolean<BR/>+getUsedAbility() : boolean<BR/>+getSelectedCharacter() : boolean<BR/>+cannotMove() : void<BR/>+cannotDoAbility() : void<BR/><i>+readyFrame() : JFrame</i>}>];
	n12 [label = <{GameCharacter||+canMove(start : Tile, end : Tile, distance : int) : boolean<BR/>+canInteract(tile : Tile) : boolean<BR/>+ability(choice : Tile...) : boolean<BR/>+deriveFromModel(model : GameModel) : void<BR/>+convertToOutboundFormat() : String<BR/>+getLit() : boolean<BR/>+getSuspect() : boolean<BR/>+getLocation() : int<BR/>+getTileLocation() : Tile<BR/>+getName() : String<BR/>+getDistance() : int<BR/>+getShortName() : String<BR/>+setLit(in : boolean) : void<BR/>+setSuspect(in : boolean) : void<BR/>+setLocation(index : Tile) : void<BR/>+requiredValuesForAbility() : int<BR/>+abilityPermissionArray() : boolean[]<BR/>+hasToDoAbility() : boolean<BR/>+canDoAbilityBefore() : boolean<BR/>+canDoAbilityDuring() : boolean<BR/>+canDoAbilityAfter() : boolean<BR/>+canMoveAfterAbility() : boolean}>];
	n13 [label = <{MrJack||+MrJack() : MrJack<BR/>+whoIsMrJack() : GameCharacter<BR/>+hasWonTimer(isOver : boolean) : boolean<BR/>+hasWonEscape(onExit : boolean, turn : int) : boolean}>];
	n14 [label = <{Tile|?neighbors : neighbors<BR/>?identity : identity<BR/>?shareable : shareable<BR/>?location : location<BR/>?barricade : barricade|+assignNeighbors(in : int[]) : void<BR/>+setBarricade(index : int) : void<BR/>+getNeighbors() : int[]<BR/>+getIdentity() : char<BR/>+canShare() : boolean<BR/>+getLocation() : int<BR/>+getBarricade() : int}>];
	n15 [label = <{JohnSmith|-ArrayList&lt;Lantern&gt; : relevantTiles|+JohnSmith() : JohnSmith}>];
	n16 [label = <{Detective||+Detective() : Detective<BR/>+hasWonAccusation(accused : GameCharacter) : boolean}>];
	n17 [label = <{MrJackCharacterDec|#GameCharacter : character|+MrJackCharacterDec(mrJackChar : GameCharacter) : MrJackCharacterDec<BR/>+removeDecorator() : GameCharacter}>];
	n18 [label = <{Player||+getAlibis() : ArrayList&lt;GameCharacter&gt;<BR/>+assignMrJack(inJack : GameCharacter) : void}>];
	n19 [label = <{InteractFrame|<i>-ArrayList&lt;Integer[]&gt; : eventSquare</i><BR/><i>-clickComponent : mouseEvent</i><BR/><i>-keyComponent : keyPress</i><BR/><i>-HashMap&lt;String, Image&gt; : )</i>|+InteractFrame() : InteractFrame<BR/>+resetClickEvent() : void<BR/>+clickEvent() : void<BR/>+keyEvent() : void<BR/>+getClickComponent() : clickComponent<BR/>+getKeyComponent() : keyComponent<BR/><i>+retrieveImage(path : String) : Image</i><BR/>+addPic(x : int, y : int, path : String, g : Graphics) : void<BR/>+addPicScaled(x : int, y : int, path : String, g : Graphics, scale : int) : void<BR/>+addClickPic(x : int, y : int, path : String, g : Graphics, key : int) : void<BR/>+addClickPicScaled(x : int, y : int, path : String, g : Graphics, key : int, scale : int) : void<BR/>+addPicScaledCorner(x : int, y : int, path : String, g : Graphics, scale : int) : void<BR/>+addText(x : int, y : int, phrase : String, g : Graphics) : void<BR/>+addOwnTextScaled(x : int, y : int, phrase : String, g : Graphics, scale : int) : void<BR/>+addButton(x : int, y : int, wid : int, hei : int, title : String, col : Color, g : Graphics, key : int) : void<BR/>+addImageButton(x : int, y : int, title : String, filePath : String, g : Graphics, key : int, imageScale : int, textScale : int) : void<BR/>+addShadedRegion(x : int, y : int, wid : int, hei : int, col : Color, g : Graphics) : void<BR/>+addTextField(x : int, y : int, wid : int, hei : int, g : Graphics, key : int) : void<BR/>+drawHexagon(x : int, y : int, distance : int, g : Graphics, col : Color, thick : int) : void}>];
	n20 [label = <{clickComponent|-int : activeSelect<BR/>-ArrayList&lt;Integer[]&gt; : eventSquare<BR/>-InteractFrame : containerFrame|+clickComponent() : clickComponent<BR/>+getSelected() : int<BR/>+resetSelected() : void<BR/>+setEventSquare(updated : ArrayList&lt;Integer[]&gt;) : void<BR/>+setParentFrame(reference : InteractFrame) : void<BR/>+addClickRegion(values : Integer[]) : void<BR/>+resetClickRegion() : void<BR/>+mouseClicked(e : MouseEvent) : void<BR/>+mouseReleased(e : MouseEvent) : void<BR/>+mouseEntered(e : MouseEvent) : void<BR/>+mousePressed(e : MouseEvent) : void<BR/>+mouseExited(e : MouseEvent) : void}>];
	n21 [label = <{JosephLane||+JosephLane() : JosephLane}>];
	n22 [label = <{DrawnTile|?x : x<BR/>?y : y<BR/>?index : index<BR/>?state : state|+DrawnTile(inX : double, inY : double, label : String, loc : int) : DrawnTile<BR/>+getX() : double<BR/>+getY() : double<BR/>+getType() : String<BR/>+getIndex() : int<BR/>+getState() : boolean<BR/>+setX(in : double) : void<BR/>+setY(in : double) : void<BR/>+setType(in : String) : void<BR/>+setState(in : boolean) : void}>];
	n23 [label = <{Road||+Road(loc : int) : Road}>];
	n24 [label = <{JohnSmithTest||+requiredValuesForAbility(throws : )) : void<BR/>+hasToDoAbility(throws : )) : void<BR/>+canDoAbilityBefore(throws : )) : void<BR/>+canDoAbilityDuring(throws : )) : void<BR/>+canDoAbilityAfter(throws : )) : void<BR/>+ability(throws : )) : void<BR/>+canMove(throws : )) : void<BR/>+canInteract(throws : )) : void<BR/>+setLit(throws : )) : void<BR/>+getLit(throws : )) : void<BR/>+setSuspect(throws : )) : void<BR/>+getSuspect(throws : )) : void<BR/>+getLocation(throws : )) : void<BR/>+setLocation(throws : )) : void}>];
	n25 [label = <{SirWilliamGullTest||+requiredValuesForAbility(throws : )) : void<BR/>+hasToDoAbility(throws : )) : void<BR/>+canDoAbilityBefore(throws : )) : void<BR/>+canDoAbilityDuring(throws : )) : void<BR/>+canDoAbilityAfter(throws : )) : void<BR/>+ability(throws : )) : void<BR/>+canMove(throws : )) : void<BR/>+canInteract(throws : )) : void<BR/>+setLit(throws : )) : void<BR/>+getLit(throws : )) : void<BR/>+setSuspect(throws : )) : void<BR/>+getSuspect(throws : )) : void<BR/>+getLocation(throws : )) : void<BR/>+setLocation(throws : )) : void}>];
	n26 [label = <{Manhole|?covered : covered|+Manhole(loc : int) : Manhole<BR/>+getCovered() : boolean<BR/>+setCovered(val : boolean) : void<BR/>+assignManholeNeighbors(manholes : Tile[]) : void}>];
	n27 [label = <{InspectorLestrade|-ArrayList&lt;Exit&gt; : relevantTiles|+InspectorLestrade() : InspectorLestrade}>];
	n28 [label = <{Exit|?blocked : blocked|+Exit(loca : int) : Exit<BR/>+setBlocked(val : boolean) : void<BR/>+getBlocked() : boolean}>];
	n29 [label = <{InspectorAbberline|-GameCharacter[] : charactersInPlay<BR/>-boolean[] : restrictedMovementChars|+InspectorAbberline() : InspectorAbberline<BR/>+removeRestrictions() : void}>];
	n30 [label = <{Clock|?turnValue : turnValue<BR/>?maxLanternsOff : maxLanternsOff|+Clock(givenLanterns : Tile[], lanternLimit : int, lanternsOffStart : int) : Clock<BR/>+iterateTurn() : void<BR/>+convertToOutboundFormat() : String<BR/>+getTurn() : int<BR/>-manageLanterns() : void}>];
	n31 [label = <{RestrictedMovementDec|-int : restrictedDist=1|+RestrictedMovementDec(mrJackChar : GameCharacter) : RestrictedMovementDec}>];
	n32 [label = <{TimerRefresh|-GameView : parent|+TimerRefresh(par : GameView) : TimerRefresh<BR/>+run() : void}>];
	n33 [label = <{SirWilliamGull|-GameCharacter[] : characters|+SirWilliamGull() : SirWilliamGull}>];
	n34 [label = <{Madame||+Madame() : Madame}>];
	n35 [label = <{Building||+Building(loc : int) : Building}>];

	subgraph cluster_model{
		label = "model";
		fontsize = 30;
		penwidth = 1;
		subgraph cluster_model_character{
			label = "model.character";
			fontsize = 26;
			penwidth = 2;
			n3;
			n4;
			n5;
			n6;
			n12;
			n15;
			n17;
			n21;
			n24;
			n25;
			n27;
			n29;
			n31;
			n33;
			n34;
	}
}
	subgraph cluster_model{
		label = "model";
		fontsize = 30;
		penwidth = 1;
		subgraph cluster_model_character{
			label = "model.character";
			fontsize = 26;
			penwidth = 2;
			subgraph cluster_model_character_implementation{
				label = "model.character.implementation";
				fontsize = 22;
				penwidth = 3;
				n6;
				n15;
				n21;
				n27;
				n29;
				n33;
				n34;
		}
	}
}
	subgraph cluster_view{
		label = "view";
		fontsize = 30;
		penwidth = 1;
		n8;
		n9;
		n19;
		n20;
		n32;
}
	subgraph cluster_controller{
		label = "controller";
		fontsize = 30;
		penwidth = 1;
		n11;
}
	subgraph cluster_view{
		label = "view";
		fontsize = 30;
		penwidth = 1;
		subgraph cluster_view_visualmechanics{
			label = "view.visualmechanics";
			fontsize = 26;
			penwidth = 2;
			n8;
			n19;
			n20;
			n32;
	}
}
	subgraph cluster_model{
		label = "model";
		fontsize = 30;
		penwidth = 1;
		subgraph cluster_model_tile{
			label = "model.tile";
			fontsize = 26;
			penwidth = 2;
			n2;
			n14;
			n23;
			n26;
			n28;
			n35;
	}
}
	subgraph cluster_testing{
		label = "testing";
		fontsize = 30;
		penwidth = 1;
		n1;
}
	subgraph cluster_model{
		label = "model";
		fontsize = 30;
		penwidth = 1;
		subgraph cluster_model_game{
			label = "model.game";
			fontsize = 26;
			penwidth = 2;
			n7;
			n22;
			n30;
	}
}
	subgraph cluster_model{
		label = "model";
		fontsize = 30;
		penwidth = 1;
		subgraph cluster_model_character{
			label = "model.character";
			fontsize = 26;
			penwidth = 2;
			subgraph cluster_model_character_test{
				label = "model.character.test";
				fontsize = 22;
				penwidth = 3;
				n4;
				n5;
				n24;
				n25;
		}
	}
}
	subgraph cluster_model{
		label = "model";
		fontsize = 30;
		penwidth = 1;
		n2;
		n3;
		n4;
		n5;
		n6;
		n7;
		n10;
		n12;
		n13;
		n14;
		n15;
		n16;
		n17;
		n18;
		n21;
		n22;
		n23;
		n24;
		n25;
		n26;
		n27;
		n28;
		n29;
		n30;
		n31;
		n33;
		n34;
		n35;
}
	subgraph cluster_model{
		label = "model";
		fontsize = 30;
		penwidth = 1;
		subgraph cluster_model_player{
			label = "model.player";
			fontsize = 26;
			penwidth = 2;
			n13;
			n16;
			n18;
	}
}

	n1 -> n11;
	n2 -> n14;
	n3 -> n10;
n3 -> n14;
	n4 -> n27;
n4 -> n7;
n4 -> n14;
		n6 -> n10;
n6 -> n3;
n6 -> n7;
n6 -> n35;
n6 -> n14;
	n7 -> n12;
n7 -> n35;
n7 -> n28;
n7 -> n2;
n7 -> n26;
n7 -> n23;
n7 -> n14;
		n9 -> n11;
n9 -> n22;
n9 -> n19;
n9 -> n32;
	n10 -> n12;
n10 -> n3;
n10 -> n29;
n10 -> n27;
n10 -> n15;
n10 -> n21;
n10 -> n34;
n10 -> n6;
n10 -> n33;
n10 -> n7;
n10 -> n30;
n10 -> n16;
n10 -> n13;
	n11 -> n10;
n11 -> n9;
	n12 -> n10;
n12 -> n14;
	n13 -> n12;
n13 -> n18;
		n15 -> n10;
n15 -> n3;
n15 -> n7;
n15 -> n2;
n15 -> n14;
	n16 -> n12;
n16 -> n18;
	n17 -> n3;
	n18 -> n12;
n18 -> n3;
			n21 -> n10;
n21 -> n3;
n21 -> n7;
n21 -> n2;
n21 -> n14;
		n23 -> n14;
			n26 -> n14;
	n27 -> n10;
n27 -> n3;
n27 -> n7;
n27 -> n28;
n27 -> n14;
	n28 -> n14;
	n29 -> n10;
n29 -> n12;
n29 -> n3;
n29 -> n31;
n29 -> n7;
n29 -> n28;
n29 -> n14;
	n30 -> n2;
n30 -> n14;
	n31 -> n10;
n31 -> n14;
n31 -> n17;
	n32 -> n9;
	n33 -> n10;
n33 -> n12;
n33 -> n3;
n33 -> n14;
	n34 -> n10;
n34 -> n3;
n34 -> n7;
n34 -> n26;
n34 -> n14;
	n35 -> n14;
}