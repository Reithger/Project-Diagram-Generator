digraph G {
	node[shape=record,style=filled,fillcolor=gray95];
	edge[concentrate=true];
	graph[splines = ortho, ranksep = 1, ratio = fill, color=blue];
	rankdir = TB;

	n0 [label = <{HeaderSelect|<b><i>-ROTATION_MULTIPLIER : int</i></b><BR/><b><i>-HEADER_FONT : Font</i></b><BR/>-reference : InputHandler<BR/>-codeBase : int|+HeaderSelect(x : int, y : int, wid : int, hei : int, inCode : int) : HeaderSelect<BR/>+updateSizeLoc(x : int, y : int, wid : int, hei : int) : void<BR/>+update(header : ArrayList&lt;String&gt;, select : int) : void<BR/>+setInputHandler(in : InputHandler) : void<BR/>+getCodeBase() : int}>];
	n1 [label = <{DecideSBCoobs|<i>-attributeObservableRef : String</i><BR/>-plants : ArrayList&lt;TransitionSystem&gt;<BR/>-specs : ArrayList&lt;TransitionSystem&gt;<BR/>-attributes : ArrayList&lt;String&gt;<BR/>-agents : ArrayList&lt;Agent&gt;<BR/>-events : HashSet&lt;String&gt;<BR/>-sbStructure : StateBased<BR/>-pathKnowledge : boolean|+DecideSBCoobs(pathIn : boolean) : DecideSBCoobs<BR/>+DecideSBCoobs(eventsIn : ArrayList&lt;String&gt;, specStart : TransitionSystem, attr : ArrayList&lt;String&gt;, agentsIn : ArrayList&lt;Agent&gt;) : DecideSBCoobs<BR/>+DecideSBCoobs(inPlants : ArrayList&lt;TransitionSystem&gt;, inSpecs : ArrayList&lt;TransitionSystem&gt;, attrIn : ArrayList&lt;String&gt;, agentsIn : ArrayList&lt;Agent&gt;) : DecideSBCoobs<BR/><i>+assignAttributeReferences(obs : String) : void</i><BR/>-generateSigmaStarion(spec : TransitionSystem) : TransitionSystem<BR/>#assignPathKnowledge(in : boolean) : void<BR/>-getPathKnowledge() : boolean<BR/>-getSequences(index : int, aS : AgentStates, paths : ArrayList&lt;ArrayList&lt;StateSet&gt;&gt;, use : ArrayList&lt;ArrayList&lt;String&gt;&gt;, s : String, out : HashSet&lt;IllegalConfig&gt;) : void<BR/>-copy(in : ArrayList&lt;ArrayList&lt;String&gt;&gt;) : ArrayList&lt;ArrayList&lt;String&gt;&gt;}>];
	n2 [label = <{UStructMemoryMeasure|-stateSize : int<BR/>-transSize : int<BR/>-numberAgentGroups : ArrayList&lt;Integer&gt;<BR/>-sizeStateGroups : ArrayList&lt;Integer&gt;|+assignStateSize(in : int) : void<BR/>+assignTransitionSize(in : int) : void<BR/>+logAgentGroupSize(in : int) : void<BR/>+logStateGroupSize(in : int) : void<BR/>-getAverageAgents() : double<BR/>-getAverageStates() : double<BR/>-averageList(in : ArrayList&lt;Integer&gt;) : double<BR/>-getMaximumStates() : int}>];
	n3 [label = <{FSMImage|<b><i>-DEFAULT_IMAGE_PATH : String</i></b><BR/><b><i>-EVENT_RECEIVER_NAME : String</i></b><BR/>-reference : String<BR/>-path : String<BR/>-zoom : double<BR/>-x : int<BR/>-y : int<BR/><i>-iD : ImageDisplay</i>|+FSMImage(inRef : String, inPath : String) : FSMImage<BR/><i>+attachPanel(p : HandlePanel) : void</i><BR/><i>+dettachPanel(p : HandlePanel) : void</i><BR/>+drawPage() : void<BR/>+setZoom(in : double) : void<BR/>+setX(in : int) : void<BR/>+setY(in : int) : void<BR/>+setReferenceName(in : String) : void<BR/>+setImage(in : String) : void<BR/>+getZoom() : double<BR/>+getX() : int<BR/>+getY() : int<BR/>+getReferenceName() : String<BR/>+getImage() : String}>];
	n4 [label = <{<i>EntrySet</i>|<b><i>#DEFAULT_FONT : Font</i></b><BR/><b><i>-SUBSYSTEM_CODE_DEFAULT : int</i></b><BR/><b><i>+SIGNIFIER_TRUE : String</i></b><BR/><i>#subSystemCode : int</i><BR/>-contents : ArrayList&lt;String&gt;<BR/>-codes : HashMap&lt;Integer,String&gt;<BR/>-prefix : String<BR/>-label : String<BR/>-button : boolean<BR/>-code : int|+EntrySet(inPref : String, inName : String, submit : boolean, inCode : int) : EntrySet<BR/>+drawEntrySet(y : int, lineHei : int, p : HandlePanel) : int<BR/><u>#draw(y : int, lineHei : int, p : HandlePanel) : int</u><BR/>+handleInput(code : int, p : HandlePanel) : boolean<BR/>+resetContent() : String<BR/>+reset(p : HandlePanel) : void<BR/>#registerCode(in : int, ref : String) : void<BR/>#deregisterCode(in : int) : void<BR/>#deregisterCodes() : void<BR/>+setContents(in : ArrayList&lt;String&gt;) : void<BR/>+setContent(in : String, index : int) : void<BR/>+addContent(in : String) : void<BR/>+resetContentAt(i : int) : void<BR/>+deleteContentAt(i : int) : void<BR/>#getCodeMapping(code : int) : String<BR/>#prefix() : String<BR/>+containsCode(in : int) : boolean<BR/>+getName() : String<BR/>+getCode() : int<BR/>+getContentAt(i : int) : String<BR/>+getContents() : ArrayList&lt;String&gt;}>];
	n5 [label = <{DisplayPage|<b><i>-TITLE_FONT : Font</i></b><BR/><b><i>-TEXT_FONT : Font</i></b><BR/><b><i>-ATTRIBUTE_FONT : Font</i></b><BR/><b><i>-STAND_IN_CODE : int</i></b><BR/><b><i>-DEFAULT_ENTRY_SIZE : int</i></b><BR/><b><i>-TITLE_STATES : String</i></b><BR/><b><i>-TITLE_EVENTS : String</i></b><BR/><b><i>-TITLE_TRANS : String</i></b><BR/><b><i>-VERT_PROP : double</i></b><BR/>-info : FSMInfo<BR/>-imageDisplay : FSMImage<BR/>-displayImageMode : boolean<BR/>-reference : InputHandler<BR/>-p : HandlePanel|+DisplayPage(give : InputHandler, panel : HandlePanel) : DisplayPage<BR/>+draw() : void<BR/>+updateFSMInfo(in : FSMInfo) : void<BR/>+drawInfo() : void<BR/>-drawDisplayThing(x : int, y : int, wid : int, hei : int, title : String, attributes : ArrayList&lt;String&gt;, entries : ArrayList&lt;String&gt;, factors : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;) : void<BR/>+drawImage() : void<BR/>-drawCycleImageButton() : void<BR/>+drawDefault() : void<BR/>-addFraming() : void<BR/>+toggleDisplayMode() : void<BR/>+updateImage() : void<BR/>+adjustOffsets() : void<BR/>-getVertBuffer(p : HandlePanel) : int<BR/>-getSideBuffer(p : HandlePanel) : int<BR/>+hasDisplay() : boolean}>];
	n6 [label = <{CrushMap|-crushMapping : HashMap&lt;String,HashSet&lt;Integer&gt;&gt;|+CrushMap() : CrushMap<BR/>+assignStateGroup(state : String, group : int) : void<BR/>+getOutput(importantStates : ArrayList&lt;String&gt;) : String<BR/>+getStateMemberships(stateName : String) : ArrayList&lt;Integer&gt;<BR/>+hasStateMembership(stateName : String, group : int) : boolean}>];
	n7 [label = <{Category|<b><i>-CATEGORY_FONT : Font</i></b><BR/>-name : String<BR/>-sets : ArrayList&lt;EntrySet&gt;<BR/>-open : boolean<BR/>-catCode : int|+Category(nom : String) : Category<BR/>+draw(y : int, heiLine : int, p : HandlePanel) : int<BR/>+drawCategoryHeader(y : int, lineHei : int, p : HandlePanel) : int<BR/>+handleInput(code : int, p : HandlePanel) : boolean<BR/>+toggleOpen() : void<BR/>+hideContents() : void<BR/>+setCode(in : int) : void<BR/>+addEntrySet(in : EntrySet) : void<BR/>+setEntrySetContents(code : int, ref : ArrayList&lt;String&gt;) : void<BR/>+setEntrySetContent(code : int, index : int, ref : String) : void<BR/>+resetEntrySetContent(code : int, index : int) : void<BR/>+deleteEntrySetContent(code : int, index : int) : void<BR/>+resetEntrySetContents(code : int) : String<BR/>+prefix() : String<BR/>+getTitle() : String<BR/>+isOpen() : boolean<BR/>+getCode() : int<BR/>#getEntrySet(code : int) : EntrySet<BR/>+getContents(code : int) : ArrayList&lt;String&gt;<BR/>+getContent(code : int, posit : int) : String<BR/>+contains(code : int) : boolean}>];
	n8 [label = <{ProcessDES||<i>+buildObserver(in : TransitionSystem) : TransitionSystem</i><BR/><i>+product(fsms : ArrayList&lt;TransitionSystem&gt;) : TransitionSystem</i><BR/><i>+parallelComposition(fsms : ArrayList&lt;TransitionSystem&gt;) : TransitionSystem</i><BR/><i>+permissiveUnion(fsms : ArrayList&lt;TransitionSystem&gt;) : TransitionSystem</i><BR/><i>+convertSoloPlantSpec(in : TransitionSystem) : TransitionSystem</i><BR/><i>+trim(in : TransitionSystem) : TransitionSystem</i><BR/><i>+makeAccessible(in : TransitionSystem) : TransitionSystem</i><BR/><i>+makeCoAccessible(in : TransitionSystem) : TransitionSystem</i><BR/><i>+isBlocking(in : TransitionSystem) : Boolean</i><BR/><i>+isAccessible(in : TransitionSystem) : Boolean</i><BR/><i>+findPrivateStates(in : TransitionSystem) : ArrayList&lt;String&gt;</i><BR/><i>+testOpacity(in : TransitionSystem) : Boolean</i><BR/><i>+isCoobservableUStruct(plant : TransitionSystem, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : Boolean</i><BR/><i>+isInferenceCoobservableUStruct(plant : TransitionSystem, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : Boolean</i><BR/><i>+isCoobservableUStruct(plant : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : Boolean</i><BR/><i>+isInferenceCoobservableUStruct(plant : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : Boolean</i><BR/><i>+isSBCoobservableUrvashi(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : Boolean</i><BR/><i>+isIncrementalCoobservable(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : Boolean</i><BR/><i>+isIncrementalInferenceCoobservable(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : Boolean</i><BR/><i>+isIncrementalSBCoobservable(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : Boolean</i><BR/><i>+buildUStructure(plant : TransitionSystem, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : TransitionSystem</i><BR/><i>+buildUStructure(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : TransitionSystem</i><BR/><i>+buildUStructureCrush(plant : TransitionSystem, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : ArrayList&lt;TransitionSystem&gt;</i><BR/><i>+buildUStructureCrush(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : ArrayList&lt;TransitionSystem&gt;</i><BR/><i>+assignReferences(rmm : ReceiveMemoryMeasure, init : String, mark : String, priv : String, obs : String, cont : String, bad : String, good : String) : void</i>}>];
	n9 [label = <{EntryTextDisplay||+EntryTextDisplay(pref : String, name : String, button : boolean, code : int) : EntryTextDisplay<BR/>#formTextButtonName(index : int) : String}>];
	n10 [label = <{OptionPageManager|<b><i>-ROTATION_MULTIPLIER : int</i></b><BR/><b><i>-CODE_BASE_OPTIONS_HEADER : int</i></b><BR/>-optionPages : OptionPage[]<BR/><i>-currentOptionPageIndex : int</i><BR/>-bodyPanel : HandlePanel<BR/>-loading : boolean<BR/>-lastX : int<BR/>-lastY : int<BR/>-optionHeader : HeaderSelect|+OptionPageManager(reference : InputHandler, xIn : int, yIn : int, wid : int, hei : int, vertProp : double) : OptionPageManager<BR/>+updateSizeLoc(x : int, y : int, wid : int, hei : int, vertProp : double) : void<BR/>-generateHandlePanel(x : int, y : int, width : int, height : int) : void<BR/>+drawPage() : void<BR/>+startLoading() : void<BR/>+endLoading() : void<BR/>+clearTextContents(code : int) : void<BR/>+setCurrentOptionPageIndex(in : int) : void<BR/>+setEntrySetContent(code : int, posit : int, ref : String) : void<BR/>+getCodeReferenceBase() : int<BR/>+getSizePageList() : int<BR/>+getHeaderPanel() : HandlePanel<BR/>+getTextContent(code : int, posit : int) : String<BR/>+getCheckboxContent(code : int) : Boolean<BR/>+getContent(code : int) : ArrayList&lt;String&gt;<BR/>+getOptionPageNames() : ArrayList&lt;String&gt;<BR/>-getCurrentPage() : OptionPage<BR/>+getBodyPanel() : HandlePanel<BR/>+getCurrentOptionPageIndex() : int<BR/>+getOptionPageList() : OptionPage[]}>];
	n11 [label = <{Main||<i>+main(args : String[]) : void</i>}>];
	n12 [label = <{UMLConfigValidation|<b><i>+CODE_FAILURE_DOT_ADDRESS : int</i></b><BR/><b><i>+CODE_FAILURE_FILE_MISSING : int</i></b>|-verifyDotAddress(path : String) : int}>];
	n13 [label = <{EntryCheckbox||+EntryCheckbox(pref : String, name : String, butt : boolean, code : int) : EntryCheckbox}>];
	n14 [label = <{EntryList|<b><i>-ADD_FONT : Font</i></b><BR/>-addCode : int|+EntryList(pref : String, name : String, butt : boolean, code : int, inCode : int) : EntryList}>];
	n15 [label = <{TransitionFunction|-transitions : HashMap&lt;String,ArrayList&lt;Transition&gt;&gt;<BR/>-attributes : ArrayList&lt;String&gt;|+TransitionFunction(defAttrib : ArrayList&lt;String&gt;) : TransitionFunction<BR/>+mergeTransitionFunctions(in : TransitionFunction) : void<BR/>+mergeTransitions(in : TransitionFunction) : void<BR/>+renameEvent(old : String, newNom : String) : void<BR/>+addTransition(inState : String, event : String, outState : String) : void<BR/>+addTransitions(state : String, inTransitions : ArrayList&lt;Transition&gt;) : void<BR/>+addTransition(state : String, event : String, target : String, context : TransitionFunction) : void<BR/>+removeStateTransitions(state : String) : void<BR/>+removeEventTransitions(event : String) : void<BR/>+removeTransition(stateFrom : String, event : String, stateTo : String) : void<BR/>+removeTransition(stateFrom : String, event : String) : void<BR/>+setAttributes(attrib : ArrayList&lt;String&gt;) : void<BR/>+setTransitionAttribute(state : String, event : String, ref : String, val : boolean) : void<BR/>+getTransitionsWithAttribute(attrib : String) : ArrayList&lt;String&gt;<BR/>+getAttributes() : ArrayList&lt;String&gt;<BR/>+getTransitionAttribute(state : String, event : String, ref : String) : Boolean<BR/>+getStateNames() : ArrayList&lt;String&gt;<BR/>+getStateEvents(state : String) : ArrayList&lt;String&gt;<BR/>+getTransitionStates(state : String, event : String) : ArrayList&lt;String&gt;<BR/>+eventExists(state : String, event : String) : boolean<BR/>#getTransitions() : HashMap&lt;String,ArrayList&lt;Transition&gt;&gt;<BR/>#getTransitions(state : String) : ArrayList&lt;Transition&gt;<BR/>#getTransition(state : String, event : String) : Transition<BR/>+contains(reference : String, transition : Transition) : boolean}>];
	n16 [label = <{StateMap|-states : HashMap&lt;String,Entity&gt;<BR/>-composition : HashMap&lt;String,ArrayList&lt;String&gt;&gt;<BR/>-attributes : ArrayList&lt;String&gt;|+StateMap(defAttrib : ArrayList&lt;String&gt;) : StateMap<BR/>+mergeStateMaps(in : StateMap) : void<BR/>+mergeStateCompositions(in : StateMap) : void<BR/>+mergeStates(in : StateMap) : void<BR/>+renameState(oldName : String, newName : String) : boolean<BR/>+renameStates() : void<BR/>+addState(stateName : String) : void<BR/>+addState(stateName : String, context : StateMap) : void<BR/>+addStateComposition(keyState : String, composedStates : ArrayList&lt;String&gt;) : void<BR/>+addAttributeToState(stateName : String, attribute : String, set : boolean) : void<BR/>+removeState(stateName : String) : void<BR/>+setAttributes(attrib : ArrayList&lt;String&gt;) : void<BR/>+setStateAttribute(nom : String, ref : String, val : boolean) : void<BR/>+setStates(in : StateMap) : void<BR/>+setStateComposition(state : String, comp : ArrayList&lt;String&gt;) : void<BR/>+setStateCompositions(in : StateMap) : void<BR/>#getState(stateName : String) : Entity<BR/>+getStatesWithAttribute(attrib : String) : ArrayList&lt;String&gt;<BR/>+getAttributes() : ArrayList&lt;String&gt;<BR/>+getNames() : ArrayList&lt;String&gt;<BR/>+getStateComposition(provided : String) : ArrayList&lt;String&gt;<BR/>+stateExists(stateName : String) : boolean<BR/>+getStateAttribute(nom : String, ref : String) : Boolean<BR/>#getStates() : HashMap&lt;String,Entity&gt;<BR/>#getStateCompositions() : HashMap&lt;String,ArrayList&lt;String&gt;&gt;}>];
	n17 [label = <{Transition|-states : ArrayList&lt;String&gt;|+Transition(inEvent : String, state : String) : Transition<BR/>+Transition(inString : String, inStates : ArrayList&lt;String&gt;) : Transition<BR/>#Transition(base : Entity) : Transition<BR/>+setTransitionStates(in : ArrayList&lt;String&gt;) : void<BR/>+setTransitionEvent(in : String) : void<BR/>+getEvent() : String<BR/>+getStates() : ArrayList&lt;String&gt;<BR/>+hasState(stateName : String) : boolean<BR/>+isEmpty() : boolean<BR/>+addTransitionState(in : String) : void<BR/>+removeTransitionState(stateName : String) : void<BR/>+removeTargetStates() : void}>];
	n18 [label = <{ReadWrite|<i>-SEPARATOR : String</i><BR/><i>-REGION_SEPARATOR : String</i><BR/><i>-TRUE_SYMBOL : String</i><BR/><i>-FALSE_SYMBOL : String</i>|<i>+assignConstants(separator : String, regionSeparator : String, trueSymbol : String, falseSymbol : String) : void</i><BR/><i>+generateFile(in : TransitionSystem) : String</i><BR/><i>+readFile(in : String) : TransitionSystem</i><BR/><i>+readDESpotFile(in : String) : TransitionSystem</i><BR/><i>+generateAgentFile(nom : String, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;, attributes : ArrayList&lt;String&gt;) : String</i><BR/><i>+readAgentFile(in : String) : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;</i><BR/><i>-attribute(use : ArrayList&lt;String&gt;, out : StringBuilder) : StringBuilder</i>}>];
	n19 [label = <{StateSetPath|-parent : StateSetPath<BR/>-eventPath : ArrayList&lt;String&gt;<BR/>-problemEvent : String|+StateSetPath(in : String[], inParent : StateSetPath) : StateSetPath<BR/>+setProblemEvent(in : String) : void<BR/>#search(check : StateSet) : boolean<BR/>+isNew() : boolean<BR/>+StateSetPath(in : String[]) : StateSetPath<BR/>+addEvent(s : String) : void<BR/>+getEventPath() : ArrayList&lt;String&gt;}>];
	n20 [label = <{AgentRep|-nom : String<BR/>-events : ArrayList&lt;EventRep&gt;<BR/><i>-SEPARATOR : String</i><BR/><i>-SYMBOL_TRUE : String</i><BR/><i>-SYMBOL_FALSE : String</i>|+AgentRep(inNom : String, eves : ArrayList&lt;String&gt;, attr : int) : AgentRep<BR/>+AgentRep(readIn : String) : AgentRep<BR/><i>+assignSymbols(sep : String, tr : String, fa : String) : void</i><BR/>+setName(in : String) : void<BR/>+getName() : String<BR/>+getEvent(i : int) : EventRep<BR/>+getEvents() : ArrayList&lt;EventRep&gt;<BR/>+toString() : String}>];
	n21 [label = <{GenerateFSM|<b><i>-ALPHABET_STATE : String</i></b><BR/><b><i>-ALPHABET_EVENT : String</i></b><BR/><b><i>-MAX_PERCENTAGE_VALUE : int</i></b><BR/><i>-SEPARATOR : String</i><BR/><i>-REGION_SEPARATOR : String</i><BR/><i>-TRUE_SYMBOL : String</i><BR/><i>-FALSE_SYMBOL : String</i><BR/><i>-stateAttributes : ArrayList&lt;String&gt;</i><BR/><i>-stateNumbers : ArrayList&lt;Integer&gt;</i><BR/><i>-eventAttributes : ArrayList&lt;String&gt;</i><BR/><i>-eventNumbers : ArrayList&lt;Integer&gt;</i><BR/><i>-transitionAttributes : ArrayList&lt;String&gt;</i><BR/><i>-transitionNumbers : ArrayList&lt;Integer&gt;</i><BR/><i>-defaultStateSet : ArrayList&lt;String&gt;</i><BR/><i>-defaultEventSet : ArrayList&lt;String&gt;</i>|<i>+assignStateAttributes(in : ArrayList&lt;String&gt;, amounts : ArrayList&lt;Integer&gt;) : void</i><BR/><i>+assignEventAttributes(in : ArrayList&lt;String&gt;, amounts : ArrayList&lt;Integer&gt;) : void</i><BR/><i>+assignTransitionAttributes(in : ArrayList&lt;String&gt;, amounts : ArrayList&lt;Integer&gt;) : void</i><BR/><i>+assignDefaultStateSet(in : ArrayList&lt;String&gt;) : void</i><BR/><i>+wipeDefaultStateSet() : void</i><BR/><i>+assignDefaultEventSet(in : ArrayList&lt;String&gt;) : void</i><BR/><i>+wipeDefaultEventSet() : void</i><BR/><i>+createNewFSM(name : String, sizeStates : int, sizeEvents : int, sizeTrans : int, det : boolean) : String</i><BR/><i>-writeComponentGenerative(out : StringBuilder, rand : Random, sizeComponent : int, attributes : ArrayList&lt;String&gt;, numbers : ArrayList&lt;Integer&gt;, stateNames : boolean) : HashMap&lt;Integer,String&gt;</i><BR/><i>-writeComponentDefaultSet(out : StringBuilder, rand : Random, components : ArrayList&lt;String&gt;, attributes : ArrayList&lt;String&gt;, numbers : ArrayList&lt;Integer&gt;) : HashMap&lt;Integer,String&gt;</i><BR/><i>-writeTransitions(out : StringBuilder, rand : Random, stateNames : HashMap&lt;Integer,String&gt;, eventNames : HashMap&lt;Integer,String&gt;, sizeTrans : int, isDet : boolean) : StringBuilder</i><BR/><i>+assignConstants(separator : String, regionSeparator : String, trueSymbol : String, falseSymbol : String) : void</i><BR/><i>-generateName(i : int, character : boolean) : String</i><BR/><i>-getRandomValue(rand : Random) : int</i><BR/><i>-writeAttributes(rand : int, size : int, index : int, attri : ArrayList&lt;String&gt;, numbers : ArrayList&lt;Integer&gt;, track : ArrayList&lt;Integer&gt;) : String</i><BR/><i>-writeAttribute(out : StringBuilder, attri : ArrayList&lt;String&gt;) : void</i>}>];
	n22 [label = <{ProcessAnalysis|<i>-attributePrivateRef : String</i><BR/><i>-attributeInitialRef : String</i>|<i>+assignAttributeReferences(priv : String, init : String) : void</i><BR/><i>+isBlocking(in : TransitionSystem) : Boolean</i><BR/><i>+isAccessible(in : TransitionSystem) : Boolean</i><BR/><i>+findPrivateStates(in : TransitionSystem) : ArrayList&lt;String&gt;</i><BR/><i>+testOpacity(in : TransitionSystem) : Boolean</i>}>];
	n23 [label = <{EntryText|-size : int<BR/>-expand : boolean|+EntryText(pref : String, ref : String, button : boolean, buttCode : int, len : int, fill : boolean) : EntryText<BR/>+handleInput(code : int, p : HandlePanel) : boolean<BR/>-formTextEntryName(index : int) : String}>];
	n24 [label = <{IllegalConfig|-stateSet : AgentStates<BR/>-observedPaths : ArrayList&lt;ArrayList&lt;String&gt;&gt;<BR/>-event : String|+IllegalConfig(inStates : AgentStates, inPaths : ArrayList&lt;ArrayList&lt;String&gt;&gt;, inEvent : String) : IllegalConfig<BR/>+getStateSet() : AgentStates<BR/>+getEventPath() : ArrayList&lt;String&gt;<BR/>+getObservedPaths() : ArrayList&lt;ArrayList&lt;String&gt;&gt;<BR/>+getEventPathLength() : int<BR/>+getNumberDistinctEvents() : int<BR/>+getEvent() : String<BR/>-copy(in : ArrayList&lt;String&gt;) : ArrayList&lt;String&gt;}>];
	n25 [label = <{SVGtoTikZ||<i>+convertSVGToTikZ(f : File, path : String) : File</i><BR/><i>-drawCircleNode(x : double, y : double, rad : double, mark : boolean, name : String, color : String) : String</i><BR/><i>-drawEdges(path : ArrayList&lt;Double&gt;, color : String, dotted : boolean) : String</i><BR/><i>-drawPolygon(path : ArrayList&lt;Double&gt;, color : String) : String</i><BR/><i>-drawLabel(x : double, y : double, name : String) : String</i>}>];
	n26 [label = <{AgentStates|-currentStates : String[]<BR/>-eventPath : ArrayList&lt;ArrayList&lt;String&gt;&gt;|+AgentStates(states : String[], inPath : ArrayList&lt;String&gt;) : AgentStates<BR/>+AgentStates(states : String[]) : AgentStates<BR/>+addGuess(index : int, s : String) : void<BR/>+deriveChild(newStates : String[], canAct : boolean[], s : String) : AgentStates<BR/>+deriveChild(newStates : String[], index : int, s : String) : AgentStates<BR/>+getStates() : String[]<BR/>+getEventPath() : ArrayList&lt;String&gt;<BR/>+getObservedPath(index : int) : ArrayList&lt;String&gt;<BR/>+getCompositeName() : String<BR/>#setObservedPath(index : int, inPath : ArrayList&lt;String&gt;) : void}>];
	n27 [label = <{PopoutAgentSelection|<b><i>-WIDTH : int</i></b><BR/><b><i>-HEIGHT : int</i></b><BR/><b><i>-CODE_ADD_AGENT : int</i></b><BR/><b><i>-CODE_SUBMIT : int</i></b><BR/><b><i>-CODE_TOGGLE_EVENT : int</i></b><BR/><b><i>-CODE_REMOVE_RANGE : int</i></b><BR/><b><i>-BLOCK_SIZE_RATIO : double</i></b><BR/>-DEFAULT_FONT : Font<BR/>-SMALLER_FONT : Font<BR/>-agents : ArrayList&lt;AgentRep&gt;<BR/>-refEvents : ArrayList&lt;String&gt;<BR/>-attributes : ArrayList&lt;String&gt;<BR/>-ready : boolean|+PopoutAgentSelection(inAge : ArrayList&lt;String&gt;, inEven : ArrayList&lt;String&gt;, inAttrib : ArrayList&lt;String&gt;) : PopoutAgentSelection<BR/>+drawPage() : void<BR/><i>+assignSymbols(separator : String, tr : String, fa : String) : void</i><BR/>+getResult() : ArrayList&lt;String&gt;}>];
	n28 [label = <{Attribute|-id : String<BR/>-value : boolean<BR/>-wrap : Attribute|+Attribute(inId : String) : Attribute<BR/>+addWrapper(ref : String) : void<BR/>+setAttributes(in : LinkedList&lt;String&gt;) : void<BR/>+setValue(ref : String, in : boolean) : void<BR/>+getValue(ref : String) : Boolean<BR/>+getAttributes() : LinkedList&lt;String&gt;}>];
	n29 [label = <{ColorPack|<b><i>-COLOR_ADJUST : double</i></b><BR/>-r : int<BR/>-g : int<BR/>-b : int|+ColorPack(a : int, d : int, c : int) : ColorPack<BR/>+ColorPack(a : String, d : String, c : String) : ColorPack<BR/>+getGraphvizColor() : String<BR/>-hex(in : int) : String<BR/>+cycleColor(in : int) : ColorPack<BR/>+cycleColor() : ColorPack<BR/>-affixColor(in : int) : int}>];
	n30 [label = <{UStructurePage|<b><i>-HEADER : String</i></b><BR/><b><i>-CATEGORY_USTRUC : String</i></b><BR/><b><i>-HELP : String</i></b>|+UStructurePage() : UStructurePage}>];
	n31 [label = <{FSMInfo|-fsmName : String<BR/>-image : String<BR/>-fsmStateAttributes : ArrayList&lt;String&gt;<BR/>-fsmStateDetails : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;<BR/>-fsmEventAttributes : ArrayList&lt;String&gt;<BR/>-fsmEventDetails : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;<BR/>-fsmTransitionAttributes : ArrayList&lt;String&gt;<BR/>-fsmTransitionDetails : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;|+FSMInfo(name : String) : FSMInfo<BR/>+updateStateAttributes(statAttr : ArrayList&lt;String&gt;) : void<BR/>+updateStateDetails(statDeta : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;) : void<BR/>+updateEventAttributes(evenAttr : ArrayList&lt;String&gt;) : void<BR/>+updateEventDetails(evenDeta : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;) : void<BR/>+updateTransitionAttributes(transAttr : ArrayList&lt;String&gt;) : void<BR/>+updateTransitionDetails(transDeta : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;) : void<BR/>+updateImage(img : String) : void<BR/>+getStates() : ArrayList&lt;String&gt;<BR/>+getEvents() : ArrayList&lt;String&gt;<BR/>+getTransitions() : ArrayList&lt;String&gt;<BR/>+getStateAttributes() : ArrayList&lt;String&gt;<BR/>+getEventAttributes() : ArrayList&lt;String&gt;<BR/>+getTransitionAttributes() : ArrayList&lt;String&gt;<BR/>+getStateDetails() : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;<BR/>+getEventDetails() : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;<BR/>+getTransitionDetails() : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;<BR/>+getName() : String<BR/>+getImage() : String}>];
	n32 [label = <{ProcessOperation|<i>+attributeObservableRef : String</i><BR/><i>+attributeInitialRef : String</i>|<i>+assignAttributeReferences(init : String, obs : String) : void</i><BR/><i>+buildObserver(in : TransitionSystem) : TransitionSystem</i><BR/><i>+product(fsms : ArrayList&lt;TransitionSystem&gt;) : TransitionSystem</i><BR/><i>+parallelComposition(fsms : ArrayList&lt;TransitionSystem&gt;) : TransitionSystem</i><BR/><i>+permissiveUnion(fsms : ArrayList&lt;TransitionSystem&gt;) : TransitionSystem</i><BR/><i>-collapseStates(in : TransitionSystem) : HashMap&lt;String,ArrayList&lt;String&gt;&gt;</i><BR/><i>-collapseStatesRecurs(curr : String, in : TransitionSystem, map : HashMap&lt;String,ArrayList&lt;String&gt;&gt;, visited : HashSet&lt;String&gt;) : ArrayList&lt;String&gt;</i><BR/><i>-productHelper(in : TransitionSystem, other : TransitionSystem) : TransitionSystem</i><BR/><i>-parallelCompositionHelper(in : TransitionSystem, other : TransitionSystem) : TransitionSystem</i><BR/><i>-permissiveUnionHelper(in : TransitionSystem, other : TransitionSystem) : TransitionSystem</i><BR/><i>-compileDestination(stateA : String, stateB : String, compA : ArrayList&lt;String&gt;, compB : ArrayList&lt;String&gt;, source : String, event : String, out : TransitionSystem, use : ArrayList&lt;TransitionSystem&gt;) : void</i>}>];
	n33 [label = <{AgentChicanery||<i>+generateAgentsA() : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;</i><BR/><i>+generateAgentsB() : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;</i><BR/><i>+generateAgentsB2() : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;</i><BR/><i>+generateAgentsC() : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;</i><BR/><i>+generateAgentsD() : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;</i><BR/><i>+generateAgentsE() : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;</i><BR/><i>+generateAgentsFinn5() : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;</i><BR/><i>+generateAgentsLiuOne() : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;</i><BR/><i>+generateAgentsUrvashi() : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;</i><BR/><i>#generateAgentSet(agentInfo : boolean[][][], eventList : String[]) : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;</i>}>];
	n34 [label = <{DecideCoobs|<b><i>+DECISION_MODE_ENABLE : int</i></b><BR/><b><i>+DECISION_MODE_DISABLE : int</i></b><BR/><i>-initialRef : String</i><BR/><i>-controllableRef : String</i><BR/><i>-badTransRef : String</i><BR/><i>-observableRef : String</i><BR/>-plants : ArrayList&lt;TransitionSystem&gt;<BR/>-specs : ArrayList&lt;TransitionSystem&gt;<BR/>-attr : ArrayList&lt;String&gt;<BR/>-agents : ArrayList&lt;Agent&gt;<BR/>-events : HashSet&lt;String&gt;<BR/>#ustruct : UStructure<BR/>-enableDisableMode : int|+DecideCoobs() : DecideCoobs<BR/>+DecideCoobs(inPlan : ArrayList&lt;TransitionSystem&gt;, inSpe : ArrayList&lt;TransitionSystem&gt;, attrIn : ArrayList&lt;String&gt;, agentsIn : ArrayList&lt;Agent&gt;) : DecideCoobs<BR/>+DecideCoobs(eventsIn : ArrayList&lt;String&gt;, specStart : TransitionSystem, attrIn : ArrayList&lt;String&gt;, agentsIn : ArrayList&lt;Agent&gt;) : DecideCoobs<BR/>+DecideCoobs(root : TransitionSystem, attrIn : ArrayList&lt;String&gt;, agentsIn : ArrayList&lt;Agent&gt;) : DecideCoobs<BR/><i>+assignAttributeReferences(init : String, cont : String, obs : String, bad : String) : void</i><BR/>-decideResult() : boolean<BR/>-getEnableDisableModeCounterExamples() : HashSet&lt;IllegalConfig&gt;<BR/>+getUStructure() : UStructure<BR/>-generatePlantSigmaStarion(template : TransitionSystem) : TransitionSystem<BR/>-generateSigmaStarion(spec : TransitionSystem) : TransitionSystem<BR/>-deriveTruePlant() : TransitionSystem<BR/>-cantPerform(ultSpec : TransitionSystem, specState : String, e : String) : boolean<BR/>-getRelevantEvents() : HashSet&lt;String&gt;<BR/>-isSpecEventNoPlant() : boolean<BR/>-parallelCompSpecs() : TransitionSystem<BR/>-parallelCompPlants() : TransitionSystem<BR/>-performPermissiveUnion(pl : TransitionSystem, sp : TransitionSystem) : TransitionSystem}>];
	n35 [label = <{GenerateDot|<b><i>-INITIAL_STATE_MARKER : String</i></b><BR/><b><i>-backgroundColorCycle : ColorPack[]</i></b><BR/><b><i>-SUB_START : String</i></b><BR/><b><i>-SUP_START : String</i></b><BR/><b><i>-SCRIPT_END : String</i></b><BR/><b><i>-SUB_CONVERT_START : String</i></b><BR/><b><i>-SUB_CONVERT_END : String</i></b><BR/><b><i>-SUP_CONVERT_START : String</i></b><BR/><b><i>-SUP_CONVERT_END : String</i></b>|<i>+generateDot(in : TransitionSystem) : String</i><BR/><i>-generateStateDot(in : TransitionSystem, ref : String) : String</i><BR/><i>-generateTransitionDot(in : TransitionSystem, state : String, event : String) : String</i><BR/><i>-processObjectNameScripts(in : String) : String</i>}>];
	n36 [label = <{UStructure|<b><i>-UNOBSERVED_EVENT : String</i></b><BR/><i>#attributeInitialRef : String</i><BR/><i>#attributeObservableRef : String</i><BR/><i>#attributeControllableRef : String</i><BR/><i>#attributeBadRef : String</i><BR/><i>#attributeGoodRef : String</i><BR/>-uStructure : TransitionSystem<BR/>-goodBadStates : HashSet&lt;IllegalConfig&gt;<BR/>-badGoodStates : HashSet&lt;IllegalConfig&gt;<BR/>-objectMap : HashMap&lt;String,AgentStates&gt;<BR/>-eventNameMap : HashMap&lt;String,String[]&gt;<BR/>-crushMap : CrushMap[]<BR/>-agents : Agent[]|+UStructure(thePlant : TransitionSystem, attr : ArrayList&lt;String&gt;, theAgents : ArrayList&lt;Agent&gt;) : UStructure<BR/>-initializeBadTransitions(thePlant : TransitionSystem) : HashMap&lt;String,HashSet&lt;String&gt;&gt;<BR/>-initializeAgents(thePlant : TransitionSystem, attr : ArrayList&lt;String&gt;, theAgents : ArrayList&lt;Agent&gt;) : Agent[]<BR/><i>+assignAttributeReferences(init : String, obs : String, cont : String, bad : String, good : String) : void</i><BR/>+createUStructure(plant : TransitionSystem, badTransitions : HashMap&lt;String,HashSet&lt;String&gt;&gt;, agents : Agent[]) : void<BR/>-initializeUStructure(plant : TransitionSystem) : TransitionSystem<BR/>-calculateCrush(display : boolean) : void<BR/>+printOutCrushMaps(pointOut : boolean) : String<BR/>+getFilteredIllegalConfigStates() : HashSet&lt;IllegalConfig&gt;<BR/>+getUStructure() : TransitionSystem<BR/>+getCrushUStructures() : ArrayList&lt;TransitionSystem&gt;<BR/>+getIllegalConfigOneStates() : HashSet&lt;IllegalConfig&gt;<BR/>+getIllegalConfigTwoStates() : HashSet&lt;IllegalConfig&gt;<BR/>+getCrushMappings() : CrushMap[]<BR/>-getNextState(plant : TransitionSystem, currState : String, event : String) : String<BR/>-getState(plant : TransitionSystem, eventPath : ArrayList&lt;String&gt;) : String<BR/>-getTargetStates(states : HashSet&lt;String&gt;, event : String, age : Agent, index : int) : HashSet&lt;String&gt;<BR/>-getPossibleVisibleEvents(states : HashSet&lt;String&gt;, age : Agent, index : int) : HashSet&lt;String&gt;<BR/>-getReachableStates(start : String, age : Agent, index : int) : HashSet&lt;String&gt;<BR/>-copy(in : ArrayList&lt;String&gt;) : ArrayList&lt;String&gt;<BR/>-isMeaninglessTransition(events : String[]) : boolean<BR/>-filterEventPath(events : ArrayList&lt;String&gt;, contr : String, age : Agent) : ArrayList&lt;String&gt;<BR/>-handleNewTransition(next : AgentStates, eventName : String[], currState : String) : void<BR/>-constructEventName(es : String[]) : String<BR/>-filterGroups(typeOne : HashSet&lt;IllegalConfig&gt;, typeTwo : HashSet&lt;IllegalConfig&gt;) : void}>];
	n37 [label = <{SkiptheUI|<b><i>-PLANT_NAME : String</i></b><BR/><b><i>-EVENT_LIST : String[]</i></b><BR/><i>-model : Manager</i><BR/><i>-agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;</i><BR/><i>-eventAtt : ArrayList&lt;String&gt;</i>|<i>+main(args : String[]) : void</i><BR/><i>-setupStates() : void</i><BR/><i>-setupEvents() : void</i><BR/><i>-setupTransitions() : void</i><BR/><i>-setupAgents() : void</i><BR/><i>-makeImageDisplay(in : String) : void</i>}>];
	n38 [label = <{<i>OptionPage</i>|<b><i>-HELP_FONT : Font</i></b><BR/><b><i>#OPTIONS_FONT : Font</i></b><BR/>-header : String<BR/>-help : String<BR/>-categories : ArrayList&lt;Category&gt;<BR/><i>-p : HandlePanel</i><BR/>-showHelp : boolean<BR/>-helpKey : int<BR/>-showSettings : boolean<BR/>-settingsKey : int<BR/><i>-inputRef : InputHandler</i><BR/><i>-lineHeightFraction : int</i>|+OptionPage(head : String, inHelp : String) : OptionPage<BR/>+drawPage() : void<BR/>-drawNormalPage() : void<BR/>-drawHelpPage() : void<BR/>+handleMouseInput(code : int, x : int, y : int, mouseType : int) : void<BR/>+handleInput(code : int) : boolean<BR/>-addFraming() : void<BR/><i>+assignInputHandler(iR : InputHandler) : void</i><BR/><i>+assignHandlePanel(inP : HandlePanel) : void</i><BR/>+toggleCategory(code : int) : boolean<BR/>+addCategory(title : String) : void<BR/>+resetCodeEntries(code : int) : void<BR/>+setEntrySetContent(code : int, index : int, reference : String) : void<BR/>+removeContentsFromCode(code : int, index : int) : void<BR/>+deleteContentsFromCode(code : int, index : int) : void<BR/>+resetContents(code : int) : void<BR/>+addEntryText(category : String, label : String, button : boolean, code : int, size : int, flex : boolean) : void<BR/>+addEntryTextDisplay(category : String, label : String, button : boolean, code : int) : void<BR/>+addEntryList(category : String, label : String, button : boolean, code : int, newCode : int) : void<BR/>+addEntryCheckbox(category : String, label : String, button : boolean, code : int) : void<BR/>+addEntryEmpty(category : String, label : String, button : boolean, code : int) : void<BR/>+getHeader() : String<BR/><i>+getHandlePanel() : HandlePanel</i><BR/>+getCategory(title : String) : Category<BR/>+getCategoryFromCode(code : int) : Category<BR/>+getTextFromCode(code : int, posit : int) : String<BR/>+getIntegerFromCode(code : int, posit : int) : Integer<BR/>+getCheckboxContentsFromCode(code : int) : Boolean<BR/>+getContentFromCode(code : int) : ArrayList&lt;String&gt;}>];
	n39 [label = <{FormatConversion|<b><i>-TYPE_SVG : String</i></b><BR/><b><i>-TYPE_JPG : String</i></b><BR/><b><i>-TYPE_PNG : String</i></b><BR/><b><i>-DPI_INCREASE : int</i></b><BR/><i>-CONFIG_PATH : String</i><BR/><i>-WORKING_PATH : String</i><BR/><i>-initialized : boolean</i>|<i>+assignPaths(workingPath : String, configPath : String) : void</i><BR/><i>+createImgFromFSM(fsm : String, name : String) : String</i><BR/><i>+createSVGFromFSM(fsm : String, name : String) : String</i><BR/><i>+createTikZFromSVG(fsm : String, name : String) : String</i><BR/><i>+createTikZFromFSM(fsm : String, name : String) : String</i><BR/><i>+generateDotFile(fsm : String, name : String, type : String) : File</i><BR/><i>-initializeCheck() : boolean</i>}>];
	n40 [label = <{ConcreteMemoryMeasure|-startingMemory : long<BR/>-spaceUsage : ArrayList&lt;Long&gt;<BR/>-hold : TransitionSystem|+ConcreteMemoryMeasure() : ConcreteMemoryMeasure<BR/>+logMemoryUsage() : void<BR/><i>+produceBlank() : ConcreteMemoryMeasure</i><BR/>-getMemoryUsage() : long<BR/>+getAverageMemoryUsage() : double<BR/>+getMaximumMemoryUsage() : double<BR/><i>-inMB(in : long) : double</i><BR/><i>#threeSig(in : double) : Double</i>}>];
	n41 [label = <{ProcessCoobservability|<i>-badTransRef : String</i><BR/><i>-memoryRecipient : ReceiveMemoryMeasure</i>|<i>+assignReferences(rmm : ReceiveMemoryMeasure, cont : String, obs : String, init : String, badTrans : String, goodThing : String) : void</i><BR/><i>+assignIncrementalOptions(a : int, b : int, c : int) : void</i><BR/><i>+isCoobservableUStruct(plant : TransitionSystem, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : boolean</i><BR/><i>+isCoobservableUStruct(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : boolean</i><BR/><i>+isInferenceCoobservableUStruct(plant : TransitionSystem, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : boolean</i><BR/><i>+isInferenceCoobservableUStruct(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : boolean</i><BR/><i>+isSBCoobservable(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : boolean</i><BR/><i>+isIncrementalCoobservable(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : boolean</i><BR/><i>+isIncrementalInferenceCoobservable(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : boolean</i><BR/><i>+isIncrementalSBCoobservable(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : boolean</i><BR/><i>+convertSoloPlantSpec(plant : TransitionSystem) : TransitionSystem</i><BR/><i>+constructUStruct(plant : TransitionSystem, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : UStructure</i><BR/><i>+constructUStruct(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : UStructure</i><BR/><i>+constructUStructRaw(plant : TransitionSystem, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;Agent&gt;) : UStructure</i><BR/><i>-getAllEvents(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;) : ArrayList&lt;String&gt;</i><BR/><i>-constructAgents(event : ArrayList&lt;String&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : ArrayList&lt;Agent&gt;</i>}>];
	n42 [label = <{Agent|-events : EventMap|+Agent(attr : ArrayList&lt;String&gt;, inEvents : ArrayList&lt;String&gt;) : Agent<BR/>+Agent(in : EventMap) : Agent<BR/>+addUnknownEvent(in : String) : void<BR/>+addUnknownEvents(in : Collection&lt;String&gt;) : void<BR/>+setAttributeTrue(attrib : String, names : ArrayList&lt;String&gt;) : void<BR/>+setAttribute(attrib : String, name : String, set : boolean) : void<BR/>+getEventAttribute(event : String, attrib : String) : Boolean<BR/>+getEvents() : ArrayList&lt;String&gt;<BR/>+getEventsAttributeSet(attrib : String, val : boolean) : ArrayList&lt;String&gt;<BR/>+contains(eventName : String) : boolean}>];
	n43 [label = <{StateBased|<i>-attributeInitialRef : String</i><BR/><i>-attributeObservableRef : String</i><BR/><i>-attributeControllableRef : String</i><BR/>-disable : HashMap&lt;String,HashSet&lt;StateSet&gt;&gt;<BR/>-enable : HashMap&lt;String,HashSet&lt;StateSet&gt;&gt;<BR/>-pathTracing : HashMap&lt;StateSet,ArrayList&lt;ArrayList&lt;StateSet&gt;&gt;&gt;|+StateBased(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;Agent&gt;, pathTrack : boolean) : StateBased<BR/><i>+assignAttributeReference(init : String, obs : String, cont : String) : void</i><BR/>+isSBCoobservable() : boolean<BR/>-operate(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, attr : ArrayList&lt;String&gt;, agen : ArrayList&lt;Agent&gt;) : void<BR/>-initializeEnableDisable(disable : HashMap&lt;String,HashSet&lt;StateSet&gt;&gt;, enable : HashMap&lt;String,HashSet&lt;StateSet&gt;&gt;, plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, controllable : HashSet&lt;String&gt;) : void<BR/>-observerConstructHiding(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, enable : HashMap&lt;String,HashSet&lt;StateSet&gt;&gt;, disable : HashMap&lt;String,HashSet&lt;StateSet&gt;&gt;, agentObs : ArrayList&lt;String&gt;, agentCont : ArrayList&lt;String&gt;, controllable : HashSet&lt;String&gt;) : HashMap&lt;String,HashSet&lt;StateSet&gt;&gt;<BR/>+getEquivalentPaths(in : StateSet) : ArrayList&lt;ArrayList&lt;StateSet&gt;&gt;<BR/>-getInitialState(t : TransitionSystem) : String<BR/>-getAllEvents(plants : ArrayList&lt;TransitionSystem&gt;) : ArrayList&lt;String&gt;<BR/>+getRemainingDisableStates() : ArrayList&lt;StateSet&gt;<BR/>+getRemainingEnableStates() : ArrayList&lt;StateSet&gt;<BR/>-initialStateSetPath(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;) : StateSet<BR/>-stateSetStep(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, curr : StateSet, event : String) : StateSet<BR/>-reachableStateSetPaths(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, initial : HashSet&lt;StateSet&gt;, agentObs : ArrayList&lt;String&gt;) : HashSet&lt;StateSet&gt;<BR/>-knowsEvent(system : TransitionSystem, event : String) : boolean<BR/>-canPerformEvent(system : TransitionSystem, state : String, event : String) : boolean<BR/>-canProceed(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, curr : StateSet, event : String) : boolean<BR/>-printEnableDisableSets() : void<BR/>-intersection(conglom : HashSet&lt;StateSet&gt;, check : HashSet&lt;StateSet&gt;) : HashSet&lt;StateSet&gt;}>];
	n44 [label = <{StateSet|<i>-sizePlants : int</i><BR/><i>-sizeSpecs : int</i><BR/>-plant : String[]<BR/>-spec : String[]|+StateSet(in : String[]) : StateSet<BR/><i>+assignSizes(sizePl : int, sizeSp : int) : void</i><BR/>+getStates() : String[]<BR/>+getPlantStates() : String[]<BR/>+getPlantState(index : int) : String<BR/>+getSpecStates() : String[]<BR/>+getSpecState(index : int) : String<BR/>+getState(index : int) : String<BR/>+getPairName() : String}>];
	n45 [label = <{IncrementalMemoryMeasure|-endStates : ArrayList&lt;MemoryMeasure&gt;<BR/>-endNumComponents : ArrayList&lt;Integer&gt;<BR/>-componentNames : ArrayList&lt;ArrayList&lt;String&gt;&gt;|+logFinishedProcess(in : MemoryMeasure) : void<BR/>+logFinishedComponents(in : int) : void<BR/>+logComponentNames(in : ArrayList&lt;String&gt;) : void}>];
	n46 [label = <{EventMap|-events : HashMap&lt;String,Entity&gt;<BR/>-attributes : ArrayList&lt;String&gt;|+EventMap(defAttrib : ArrayList&lt;String&gt;) : EventMap<BR/>+renameEvent(oldName : String, newName : String) : void<BR/>+mergeEventMaps(in : EventMap) : void<BR/>+mergeEvents(in : EventMap) : void<BR/>+addEvent(eventName : String) : void<BR/>+addEvent(eventName : String, context : EventMap) : void<BR/>+removeEvent(eventName : String) : void<BR/>+addAttributes(attrib : ArrayList&lt;String&gt;) : void<BR/>+overwriteAttributes(attrib : ArrayList&lt;String&gt;) : void<BR/>+setEventAttribute(nom : String, ref : String, val : boolean) : void<BR/>#getEvent(eventName : String) : Entity<BR/>+getAttributes() : ArrayList&lt;String&gt;<BR/>+getEventNames() : ArrayList&lt;String&gt;<BR/>+getEventsWithAttribute(attrib : String) : ArrayList&lt;String&gt;<BR/>+getEventAttribute(nom : String, ref : String) : Boolean<BR/>+eventExists(eventName : String) : boolean<BR/>#getEvents() : HashMap&lt;String,Entity&gt;<BR/>+contains(in : String) : boolean}>];
	n47 [label = <{TransitionSystem|-states : StateMap<BR/>-events : EventMap<BR/>-transitions : TransitionFunction<BR/>-id : String|+TransitionSystem(inId : String, attribState : ArrayList&lt;String&gt;, attribEvent : ArrayList&lt;String&gt;, attribTransition : ArrayList&lt;String&gt;) : TransitionSystem<BR/>+TransitionSystem(inId : String) : TransitionSystem<BR/>+renameStates() : void<BR/>+renameState(old : String, newName : String) : void<BR/>+renameEvent(old : String, newName : String) : void<BR/>+compileStateName(in : ArrayList&lt;String&gt;) : String<BR/>+compileStateAttributes(in : ArrayList&lt;String&gt;, context : TransitionSystem) : void<BR/>+compileStateAttributes(source : String, in : ArrayList&lt;String&gt;, context : ArrayList&lt;TransitionSystem&gt;) : void<BR/>+compileEventAttributes(eventName : String, context : ArrayList&lt;TransitionSystem&gt;) : void<BR/>+copyAttributes(ot : TransitionSystem) : void<BR/>+mergeStates(other : TransitionSystem) : void<BR/>+mergeEvents(other : TransitionSystem) : void<BR/>+mergeTransitions(other : TransitionSystem) : void<BR/>+toTextFile(filePath : String, name : String) : void<BR/>+addState(stateName : String) : void<BR/>+addState(stateName : String, context : TransitionSystem) : void<BR/>+addAttributeToState(stateName : String, attribute : String, ref : boolean) : void<BR/>+addStateComposition(main : String, pieces : ArrayList&lt;String&gt;) : void<BR/>+addEvent(eventName : String) : void<BR/>+addEvent(eventName : String, context : TransitionSystem) : void<BR/>+addTransition(state : String, event : String, state2 : String) : void<BR/>+addTransition(state : String, event : String, state2 : String, context : TransitionSystem) : void<BR/>+removeState(stateName : String) : void<BR/>+removeEvent(event : String) : void<BR/>+removeTransition(state1 : String, eventName : String, state2 : String) : void<BR/>+setId(inId : String) : void<BR/>+setFSMStateMap(inState : StateMap) : void<BR/>+setFSMEventMap(inEvent : EventMap) : void<BR/>+setFSMTransitionFunction(inTrans : TransitionFunction) : void<BR/>+setStateAttributes(attrib : ArrayList&lt;String&gt;) : void<BR/>+setStateAttribute(nom : String, ref : String, val : boolean) : void<BR/>+setStateComposition(aggregate : String, pieces : ArrayList&lt;String&gt;) : void<BR/>+setStateCompositions(in : StateMap) : void<BR/>+addEventAttributes(attrib : ArrayList&lt;String&gt;) : void<BR/>+overwriteEventAttributes(attrib : ArrayList&lt;String&gt;) : void<BR/>+setEventAttribute(nom : String, ref : String, val : boolean) : void<BR/>+setTransitionAttributes(attrib : ArrayList&lt;String&gt;) : void<BR/>+setTransitionAttribute(nom : String, event : String, ref : String, val : boolean) : void<BR/>+getId() : String<BR/>+getStateMap() : StateMap<BR/>+getEventMap() : EventMap<BR/>+getTransitionFunction() : TransitionFunction<BR/>+hasStateAttribute(ref : String) : boolean<BR/>+getStateAttributeMap() : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;<BR/>+getStatesWithAttribute(attrib : String) : ArrayList&lt;String&gt;<BR/>+getStateAttributes() : ArrayList&lt;String&gt;<BR/>+getStateNames() : ArrayList&lt;String&gt;<BR/>+getStateComposition(state : String) : ArrayList&lt;String&gt;<BR/>+stateExists(stateName : String) : boolean<BR/>+getStateAttribute(nom : String, ref : String) : Boolean<BR/>+hasEventAttribute(ref : String) : boolean<BR/>+getEventAttributeMap() : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;<BR/>+getEventsWithAttribute(attrib : String) : ArrayList&lt;String&gt;<BR/>+getEventAttributes() : ArrayList&lt;String&gt;<BR/>+getEventNames() : ArrayList&lt;String&gt;<BR/>+eventExists(eventName : String) : boolean<BR/>+getEventAttribute(nom : String, ref : String) : Boolean<BR/>+hasTransitionAttribute(ref : String) : boolean<BR/>+getTransitionsWithAttribute(attrib : String) : ArrayList&lt;String&gt;<BR/>+getTransitionAttributes() : ArrayList&lt;String&gt;<BR/>+getStateTransitionEvents(state : String) : ArrayList&lt;String&gt;<BR/>+getNumberTransitions() : int<BR/>+getStateEventTransitionStates(state : String, event : String) : ArrayList&lt;String&gt;<BR/>+getTransitionLabels() : ArrayList&lt;String&gt;<BR/>+getTransitionLabelAttributeMap() : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;<BR/>+getTransitionAttribute(nom : String, event : String, ref : String) : Boolean<BR/>-formTransitionLabel(start : String, end : String, event : String) : String<BR/>-copy(in : ArrayList&lt;String&gt;) : ArrayList&lt;String&gt;<BR/>+copy() : TransitionSystem}>];
	n48 [label = <{EventSets|<b><i>+EVENT_ATTR_LIST : String[]</i></b><BR/><b><i>+EVENT_LIST_A : String[]</i></b><BR/><b><i>+EVENT_LIST_B : String[]</i></b><BR/><b><i>+EVENT_LIST_C : String[]</i></b><BR/><b><i>+EVENT_LIST_D : String[]</i></b><BR/><b><i>+EVENT_LIST_E : String[]</i></b><BR/><b><i>+EVENT_LIST_FINN5 : String[]</i></b><BR/><b><i>+EVENT_LIST_LIU_ONE : String[]</i></b>|}>];
	n49 [label = <{AdjustFSM|<b><i>-HEADER : String</i></b><BR/><b><i>-CATEGORY_GENERATE : String</i></b><BR/><b><i>-CATEGORY_EDIT_FSM : String</i></b><BR/><b><i>-CATEGORY_EDIT_STATES : String</i></b><BR/><b><i>-CATEGORY_EDIT_EVENTS : String</i></b><BR/><b><i>-CATEGORY_EDIT_TRANSITIONS : String</i></b><BR/><b><i>-CATEGORY_ADMIN : String</i></b><BR/><b><i>-CATEGORIES : String[]</i></b><BR/><b><i>-HELP : String</i></b>|+AdjustFSM() : AdjustFSM}>];
	n50 [label = <{EntryEmpty||+EntryEmpty(prefix : String, label : String, button : boolean, code : int) : EntryEmpty}>];
	n51 [label = <{PopoutInputRequest|<b><i>-POPUP_WIDTH : int</i></b><BR/><b><i>-POPUP_HEIGHT : int</i></b><BR/><b><i>-CODE_SUBMIT : int</i></b><BR/><b><i>-ELEMENT_NAME_ENTRY : String</i></b><BR/>-entryNum : int<BR/>-ready : boolean<BR/>-out : ArrayList&lt;String&gt;|+PopoutInputRequest(text : String, num : int) : PopoutInputRequest<BR/>+getSubmitted() : ArrayList&lt;String&gt;<BR/>-compileEntryName(in : int) : String}>];
	n52 [label = <{DisplayPageManager|<b><i>-CODE_BASE_DISPLAY_HEADER : int</i></b><BR/>-imageHeader : HeaderSelect<BR/>-display : DisplayPage<BR/>-p : HandlePanel<BR/>-fsms : ArrayList&lt;FSMInfo&gt;<BR/>-index : int<BR/>-reference : InputHandler|+DisplayPageManager(ref : InputHandler, xIn : int, yIn : int, wid : int, hei : int, vertProp : double) : DisplayPageManager<BR/>+generateElementPanel(x : int, y : int, width : int, height : int) : void<BR/>+updateSizeLoc(x : int, y : int, wid : int, hei : int, vertProp : double) : void<BR/>+drawPage() : void<BR/>+toggleDisplayImageMode() : void<BR/>+removeFSM(ref : String) : void<BR/>+updateFSMInfo(ref : String, stateAttrib : ArrayList&lt;String&gt;, eventAttrib : ArrayList&lt;String&gt;, tranAttrib : ArrayList&lt;String&gt;, stateMap : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;, eventMap : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;, transMap : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;) : void<BR/>+updateFSMImage(ref : String, img : String) : void<BR/>+setCurrentDisplayIndex(ind : int) : void<BR/>+getCurrentFSM() : String<BR/>-getCurrentFSMInfo() : FSMInfo<BR/>-getFSMInfo(ref : String) : FSMInfo<BR/>-getDisplayNames() : ArrayList&lt;String&gt;<BR/>+getCodeReferenceBase() : int<BR/>+getSizeDisplayList() : int<BR/>+getBodyPanel() : HandlePanel<BR/>+getHeaderPanel() : HeaderSelect}>];
	n53 [label = <{CrushIdentityGroup|-parentGroup : CrushIdentityGroup<BR/>-event : String<BR/>-thisGroup : HashSet&lt;String&gt;|+CrushIdentityGroup(parent : CrushIdentityGroup, ev : String, group : HashSet&lt;String&gt;) : CrushIdentityGroup<BR/>+getGroup() : HashSet&lt;String&gt;<BR/>+getSize() : int<BR/>-search(check : HashSet&lt;String&gt;) : boolean}>];
	n54 [label = <{DecideInfCoobs||+DecideInfCoobs(inPlan : ArrayList&lt;TransitionSystem&gt;, inSpe : ArrayList&lt;TransitionSystem&gt;, attrIn : ArrayList&lt;String&gt;, agentsIn : ArrayList&lt;Agent&gt;) : DecideInfCoobs<BR/>+DecideInfCoobs(events : ArrayList&lt;String&gt;, specStart : TransitionSystem, attrIn : ArrayList&lt;String&gt;, agentsIn : ArrayList&lt;Agent&gt;) : DecideInfCoobs<BR/>+DecideInfCoobs(root : TransitionSystem, attr : ArrayList&lt;String&gt;, in : ArrayList&lt;Agent&gt;) : DecideInfCoobs<BR/>+DecideInfCoobs() : DecideInfCoobs}>];
	n55 [label = <{TestFunctionality|<b><i>-RESULTS_FILE : String</i></b><BR/><b><i>-ANALYSIS_FILE : String</i></b><BR/><i>-model : Manager</i><BR/><i>-eventAtt : ArrayList&lt;String&gt;</i><BR/><i>-defaultWritePath : String</i><BR/><i>-writePath : String</i><BR/><i>-terminalPrint : boolean</i>|<i>+main(args : String[]) : void</i><BR/><i>-runAllTests() : void</i><BR/><i>-runAllCoobsTests() : void</i><BR/><i>-runAllInfCoobsTests() : void</i><BR/><i>-runAllSBTests() : void</i><BR/><i>-runAllIncrementalCoobsTests() : void</i><BR/><i>-generateSystems() : void</i><BR/><i>-basicUStructCheck() : void</i><BR/><i>-crushUStructCheck() : void</i><BR/><i>-crushUStructCheck2() : void</i><BR/><i>-crushUStructCheck3() : void</i><BR/><i>-crushUStructCheckFinn() : void</i><BR/><i>-autoTestNewRandomSystem(numPlants : int, numSpecs : int, numStates : int, numStateVar : int, numEve : int, numEveVar : int, shareRate : double, numAgents : int, numAgentVar : int, obsRate : double, ctrRate : double) : void</i><BR/><i>-autoTestOldSystem(prefixNom : String) : void</i><BR/><i>-pullReserveDisplay() : void</i><BR/><i>-autoTestSystemFull(prefixNom : String, plantNames : ArrayList&lt;String&gt;, specNames : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;, displays : boolean) : void</i><BR/><i>-autoTestHeuristicsIncremental(numPlants : int, numSpecs : int, numStates : int, numStateVar : int, numEve : int, numEveVar : int, shareRate : double, numAgents : int, numAgentVar : int, obsRate : double, ctrRate : double) : void</i><BR/><i>-checkCoobservable(name : String, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;, inf : boolean) : boolean</i><BR/><i>-checkCoobservable(plants : ArrayList&lt;String&gt;, specs : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;, inf : boolean) : boolean</i><BR/><i>-printCoobsLabel(system : String, type : boolean) : void</i><BR/><i>-checkSystemACoobservable(inf : boolean) : void</i><BR/><i>-checkSystemBCoobservable(inf : boolean) : void</i><BR/><i>-checkSystemBAltCoobservable(inf : boolean) : void</i><BR/><i>-checkSystemCCoobservable(inf : boolean) : void</i><BR/><i>-checkSystemDCoobservable(inf : boolean) : void</i><BR/><i>-checkSystemECoobservable(inf : boolean) : void</i><BR/><i>-checkSystemFinnCoobservable(inf : boolean) : void</i><BR/><i>-checkSystemLiuOneCoobservable(inf : boolean) : void</i><BR/><i>-checkSystemLiuTwoCoobservable(inf : boolean) : void</i><BR/><i>-checkSBCoobservable(name : String, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : boolean</i><BR/><i>-checkSBCoobservable(plants : ArrayList&lt;String&gt;, specs : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : boolean</i><BR/><i>-prepSoloSpecRunSB(name : String, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : boolean</i><BR/><i>-printSBCoobsLabel(system : String) : void</i><BR/><i>-checkSystemASBCoobservable() : void</i><BR/><i>-checkSystemBSBCoobservable() : void</i><BR/><i>-checkSystemCSBCoobservable() : void</i><BR/><i>-checkSystemDSBCoobservable() : void</i><BR/><i>-checkSystemESBCoobservable() : void</i><BR/><i>-checkSystemUrvashiSBCoobservable() : void</i><BR/><i>-checkSystemLiuOneSBCoobservable() : void</i><BR/><i>-checkSystemLiuTwoSBCoobservable() : void</i><BR/><i>-checkIncrementalCoobservable(plants : ArrayList&lt;String&gt;, specs : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;, inf : boolean) : boolean</i><BR/><i>-checkIncrementalSBCoobservable(plants : ArrayList&lt;String&gt;, specs : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : boolean</i><BR/><i>-printIncrementalLabel(system : String, inf : boolean) : void</i><BR/><i>-printIncrementalSBLabel(system : String) : void</i><BR/><i>-checkSystemLiuOneIncrementalCoobservable() : void</i><BR/><i>-checkSystemLiuTwoIncrementalCoobservable() : void</i><BR/><i>-pullSourceData(path : String) : String</i><BR/><i>-makeImage(path : String, name : String) : void</i><BR/><i>-handleOutData(t : long, hold : long) : void</i><BR/><i>-printOut(text : String) : void</i><BR/><i>-printEquivalentResults(guide : ArrayList&lt;String&gt;, time : long, overallMem : double, vals : ArrayList&lt;Double&gt;) : void</i><BR/><i>-garbageCollect() : void</i><BR/><i>-resetModel() : void</i><BR/><i>-printTimeTook(t : long) : void</i><BR/><i>-printMemoryUsage(reduction : double) : void</i><BR/><i>-getCurrentMemoryUsage() : long</i><BR/><i>-inMB(in : long) : double</i><BR/><i>-threeSig(in : double) : Double</i><BR/><i>-generateSoloSpecPlant(plant : String, spec : String) : void</i><BR/><i>-makeImageDisplay(in : String, nom : String) : void</i><BR/><i>-makeSVGImage(in : String, nom : String) : void</i>}>];
	n56 [label = <{SystemGeneration|<i>-model : Manager</i>|<i>+assignManager(man : Manager) : void</i><BR/><i>+generateSystemExample1(name : String) : void</i><BR/><i>+generateSystemExample2(name : String) : void</i><BR/><i>+generateSystemExample3(name : String) : void</i><BR/><i>+generateSystemExample4(name : String) : void</i><BR/><i>+generateSystemA(name : String) : void</i><BR/><i>+generateSystemB(name : String) : void</i><BR/><i>+generateSystemBAlt(name : String) : void</i><BR/><i>+generateSystemC(name : String) : void</i><BR/><i>+generateSystemD(name : String) : void</i><BR/><i>+generateSystemE(name : String) : void</i><BR/><i>+generateSystemFinn(name : String) : void</i><BR/><i>+generateSystemSigmaStarion(name : String, events : ArrayList&lt;String&gt;) : void</i><BR/><i>+generateSystemSetA(name : ArrayList&lt;String&gt;) : void</i><BR/><i>+generateSystemSetB(name : ArrayList&lt;String&gt;) : void</i><BR/><i>-generateLiuG1(name : String) : void</i><BR/><i>-generateLiuG2(name : String) : void</i><BR/><i>-generateLiuH1(name : String) : void</i><BR/><i>-generateLiuG3(name : String) : void</i><BR/><i>-generateLiuG4(name : String) : void</i><BR/><i>-generateLiuH2(name : String) : void</i><BR/><i>+generateSystemSetUrvashi(plant : String, spec : String) : void</i><BR/><i>-generateUrvashiPlant(name : String) : void</i><BR/><i>-generateUrvashiSpec(name : String) : void</i><BR/><i>-generateSystemDefault(name : String) : void</i><BR/><i>-initiateEvents(name : String, eventList : String[], controllables : String...) : void</i><BR/><i>-setBadTransitions(name : String, pairTrans : String...) : void</i><BR/><i>-addTransitions(name : String, event : String, statePairs : String...) : void</i><BR/><i>-initialState(name : String, state : String) : void</i>}>];
	n57 [label = <{Entity|-id : String<BR/>-wrap : Attribute|+Entity(name : String) : Entity<BR/>+copy() : Entity<BR/>+wipeAttributes() : void<BR/>+copyAttributes(ot : Entity) : void<BR/>+addAttribute(attr : String, set : boolean) : void<BR/>+addAttributes(refs : LinkedList&lt;String&gt;) : void<BR/>+setName(in : String) : void<BR/>+setAttributeValue(ref : String, val : boolean) : void<BR/>+setAttributes(refs : LinkedList&lt;String&gt;) : void<BR/>+getName() : String<BR/>+getAttributeValue(ref : String) : Boolean<BR/>+getAttributes() : LinkedList&lt;String&gt;<BR/>+equals(other : Object) : boolean}>];
	n58 [label = <{Incremental|<b><i>+INCREMENTAL_A_BOTH : int</i></b><BR/><b><i>+INCREMENTAL_A_PLANTS : int</i></b><BR/><b><i>+INCREMENTAL_A_SPECS : int</i></b><BR/><b><i>+INCREMENTAL_B_RANDOM : int</i></b><BR/><b><i>+INCREMENTAL_B_SOONEST : int</i></b><BR/><b><i>+INCREMENTAL_B_LATEST : int</i></b><BR/><b><i>+INCREMENTAL_B_LOW_STATE : int</i></b><BR/><b><i>+INCREMENTAL_B_HIGH_STATE : int</i></b><BR/><b><i>+INCREMENTAL_B_LOW_EVENTS : int</i></b><BR/><b><i>+INCREMENTAL_B_HIGH_EVENTS : int</i></b><BR/><b><i>+INCREMENTAL_B_LOW_TRANS : int</i></b><BR/><b><i>+INCREMENTAL_B_HIGH_TRANS : int</i></b><BR/><b><i>+INCREMENTAL_B_SHARE_EVENTS : int</i></b><BR/><b><i>+INCREMENTAL_B_DIFF_EVENTS : int</i></b><BR/><b><i>+COUNTEREXAMPLE_RANDOM : int</i></b><BR/><b><i>+COUNTEREXAMPLE_SHORT : int</i></b><BR/><b><i>+COUNTEREXAMPLE_LONG : int</i></b><BR/><b><i>+COUNTEREXAMPLE_FEWEST_EVENTS : int</i></b><BR/><b><i>+COUNTEREXAMPLE_MOST_EVENTS : int</i></b><BR/><b><i>+NUM_A_HEURISTICS : int</i></b><BR/><b><i>+NUM_B_HEURISTICS : int</i></b><BR/><b><i>+NUM_C_HEURISTICS : int</i></b><BR/><i>-incrementalOptionA : int</i><BR/><i>-incrementalOptionB : int</i><BR/><i>-counterexampleChoice : int</i><BR/><i>-observableRef : String</i><BR/><i>-initialRef : String</i><BR/><i>-badRef : String</i><BR/>-decider : DecideCondition|<i>+assignIncrementalOptions(a : int, b : int, c : int) : void</i><BR/><i>+assignAttributeReference(obs : String, init : String, bad : String) : void</i><BR/>+Incremental(dC : DecideCondition) : Incremental<BR/>+decideIncrementalCondition(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;Agent&gt;) : boolean<BR/>-logData(dec : DecideCondition, hold : ArrayList&lt;TransitionSystem&gt;) : void<BR/>-pickCounterExample(counters : HashSet&lt;IllegalConfig&gt;) : IllegalConfig<BR/>-pickComponent(plants : ArrayList&lt;TransitionSystem&gt;, specs : ArrayList&lt;TransitionSystem&gt;, counterexample : IllegalConfig) : TransitionSystem<BR/>-pickComponentHeuristicNoReject(in : int) : int<BR/>-getIncrementalSettings() : int[]<BR/>-getComponentNames(components : ArrayList&lt;TransitionSystem&gt;) : ArrayList&lt;String&gt;<BR/>-getAllEvents(plants : ArrayList&lt;TransitionSystem&gt;) : ArrayList&lt;String&gt;<BR/>-countTransitions(plant : TransitionSystem) : int<BR/>-sharedEvents(plant : TransitionSystem, eventPath : ArrayList&lt;String&gt;) : int<BR/>-canReject(plant : TransitionSystem, spec : boolean, ic : IllegalConfig) : boolean<BR/>-navigateTransitionSystem(plant : TransitionSystem, eventPath : ArrayList&lt;String&gt;) : String<BR/>-observablePath(plant : TransitionSystem, eventPath : ArrayList&lt;String&gt;) : ArrayList&lt;String&gt;}>];
	n59 [label = <{RandomGeneration|<b><i>-TRANSITION_NUMBER_DEFAULT : int</i></b><BR/><b><i>-ALPHABET : String</i></b>|<i>+setupRandomFSMConditions(model : Manager, numObsEve : int, numContrEve : int, badTran : int) : void</i><BR/><i>+setupRandomFSMDefaultEvents(model : Manager, defaultEvents : ArrayList&lt;String&gt;) : void</i><BR/><i>+generateRandomFSM(nom : String, model : Manager, numStates : int, numEvents : int, numTransition : int, accessible : boolean) : String</i><BR/><i>+generateRandomSystemSet(prefixNom : String, model : Manager, numPlants : int, numSpecs : int, stateSizeAverage : int, stateVariance : int, eventSizeAverage : int, eventVariance : int, eventShareRate : double) : ArrayList&lt;String&gt;</i><BR/><i>+generateRandomAgents(events : ArrayList&lt;String&gt;, agentSizeAverage : int, agentSizeVariance : int, obsRate : double, ctrRate : double) : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;</i><BR/><i>+getComponentNames(prefixNom : String, numPlants : int, numSpecs : int) : ArrayList&lt;String&gt;</i><BR/><i>+getPlantNames(prefixNom : String, numPlants : int) : ArrayList&lt;String&gt;</i><BR/><i>+getSpecNames(prefixNom : String, numSpecs : int) : ArrayList&lt;String&gt;</i><BR/><i>-copyArrayList(in : ArrayList&lt;String&gt;) : ArrayList&lt;String&gt;</i><BR/><i>-getPlantEvents(numEvents : int, eventChar : String, plantName : String) : ArrayList&lt;String&gt;</i><BR/><i>-configureName(prefix : String, num : int, plant : boolean) : String</i>}>];
	n60 [label = <{AttributeList|<b><i>+STATE_ATTRIBUTES : String[]</i></b><BR/><b><i>+ATTRIBUTE_INITIAL : String</i></b><BR/><b><i>+ATTRIBUTE_AON_INITIAL : boolean</i></b><BR/><b><i>+ATTRIBUTE_MARKED : String</i></b><BR/><b><i>+ATTRIBUTE_AON_MARKED : boolean</i></b><BR/><b><i>+ATTRIBUTE_PRIVATE : String</i></b><BR/><b><i>+ATTRIBUTE_AON_PRIVATE : boolean</i></b><BR/><b><i>+ATTRIBUTE_BAD : String</i></b><BR/><b><i>+ATTRIBUTE_AON_BAD : boolean</i></b><BR/><b><i>+ATTRIBUTE_GOOD : String</i></b><BR/><b><i>+ATTRIBUTE_AON_GOOD : boolean</i></b><BR/><b><i>+EVENT_ATTRIBUTES : String[]</i></b><BR/><b><i>+ATTRIBUTE_OBSERVABLE : String</i></b><BR/><b><i>+ATTRIBUTE_AON_OBSERVABLE : boolean</i></b><BR/><b><i>+ATTRIBUTE_CONTROLLABLE : String</i></b><BR/><b><i>+ATTRIBUTE_AON_CONTROLLABLE : boolean</i></b><BR/><b><i>+ATTRIBUTE_ATTACKER_OBSERVABLE : String</i></b><BR/><b><i>+ATTRIBUTE_AON_ATTACKER_OBSERVABLE : boolean</i></b><BR/><b><i>+TRANSITION_ATTRIBUTES : String[]</i></b><BR/><i>-map : HashMap&lt;String,Boolean&gt;</i>|<i>+getAON(ref : String) : boolean</i><BR/><i>-setupMap() : void</i>}>];
	n61 [label = <{EntrySetFactory|<b><i>+SIGNIFIER_TRUE : String</i></b>|<i>+generateEntryText(pref : String, label : String, button : boolean, code : int, size : int, flex : boolean) : EntrySet</i><BR/><i>+generateEntryTextDisplay(pref : String, label : String, button : boolean, code : int) : EntrySet</i><BR/><i>+generateEntryList(pref : String, label : String, button : boolean, code : int, newCode : int) : EntrySet</i><BR/><i>+generateEntryCheckbox(pref : String, label : String, button : boolean, code : int) : EntrySet</i><BR/><i>+generateEntryEmpty(pref : String, label : String, button : boolean, code : int) : EntrySet</i>}>];
	n62 [label = <{Manager|<b><i>-SEPARATOR : String</i></b><BR/><b><i>-REGION_SEPARATOR : String</i></b><BR/><b><i>-TRUE_SYMBOL : String</i></b><BR/><b><i>-FALSE_SYMBOL : String</i></b><BR/>-fsms : HashMap&lt;String,TransitionSystem&gt;<BR/>-lastProcessData : MemoryMeasure|+Manager() : Manager<BR/>-assignAttributeReferences() : void<BR/>+generateFSMDot(ref : String) : String<BR/>+readInFSM(fileContents : String) : String<BR/>+exportFSM(ref : String) : String<BR/>+readInAgents(fileContents : String) : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;<BR/>+exportAgents(nom : String, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;, attributes : ArrayList&lt;String&gt;) : String<BR/>+hasFSM(ref : String) : boolean<BR/>+duplicate(fsm : String) : String<BR/>+flushFSMs() : void<BR/>+generateEmptyFSM(nom : String) : String<BR/>+assignRandomFSMStateConfiguration(stateAttr : ArrayList&lt;String&gt;, stateNumb : ArrayList&lt;Integer&gt;) : void<BR/>+assignRandomFSMDefaultStateSet(defaultState : ArrayList&lt;String&gt;) : void<BR/>+assignRandomFSMEventConfiguration(eventAttr : ArrayList&lt;String&gt;, eventNumb : ArrayList&lt;Integer&gt;) : void<BR/>+assignRandomFSMDefaultEventSet(defaultEvent : ArrayList&lt;String&gt;) : void<BR/>+assignRandomFSMTransitionConfiguration(transAttr : ArrayList&lt;String&gt;, transNumb : ArrayList&lt;Integer&gt;) : void<BR/>+generateRandomFSM(nom : String, numStates : int, numEvents : int, numTrans : int, det : boolean) : String<BR/>+storeProcessHoldSystem() : String<BR/>+performProduct(ref : ArrayList&lt;String&gt;) : String<BR/>+performParallelComposition(ref : ArrayList&lt;String&gt;) : String<BR/>+buildObserver(ref : String) : String<BR/>+trim(ref : String) : String<BR/>+makeAccessible(ref : String) : String<BR/>+makeCoAccessible(ref : String) : String<BR/>+stateExists(ref : String, nom : String) : Boolean<BR/>+eventExists(ref : String, nom : String) : Boolean<BR/>+isBlocking(ref : String) : Boolean<BR/>+isAccessible(ref : String) : Boolean<BR/>+testOpacity(ref : String) : Boolean<BR/>+findPrivateStates(ref : String) : ArrayList&lt;String&gt;<BR/>+buildUStructure(ref : String, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : String<BR/>+buildUStructure(plants : ArrayList&lt;String&gt;, specs : ArrayList&lt;String&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : String<BR/>+buildUStructureCrush(ref : String, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : ArrayList&lt;String&gt;<BR/>+isCoobservableUStruct(ref : String, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : Boolean<BR/>+isCoobservableUStruct(plants : ArrayList&lt;String&gt;, specs : ArrayList&lt;String&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : Boolean<BR/>+isInferenceCoobservableUStruct(ref : String, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : Boolean<BR/>+isInferenceCoobservableUStruct(plants : ArrayList&lt;String&gt;, specs : ArrayList&lt;String&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : Boolean<BR/>+isSBCoobservableUrvashi(refPlants : ArrayList&lt;String&gt;, refSpecs : ArrayList&lt;String&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : Boolean<BR/>+isIncrementalCoobservable(refPlants : ArrayList&lt;String&gt;, refSpecs : ArrayList&lt;String&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : Boolean<BR/>+isIncrementalInferenceCoobservable(refPlants : ArrayList&lt;String&gt;, refSpecs : ArrayList&lt;String&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : Boolean<BR/>+isIncrementalSBCoobservable(refPlants : ArrayList&lt;String&gt;, refSpecs : ArrayList&lt;String&gt;, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;&gt;) : Boolean<BR/>+convertSoloPlantSpec(ref : String, newName : String) : String<BR/>+addFSM(id : String, stateAttr : ArrayList&lt;String&gt;, eventAttr : ArrayList&lt;String&gt;, tranAttr : ArrayList&lt;String&gt;) : void<BR/>+removeFSM(id : String) : void<BR/>+renameFSM(old : String, newFSM : String) : void<BR/>+assignStateAttributes(ref : String, stateAttr : ArrayList&lt;String&gt;) : void<BR/>+assignEventAttributes(ref : String, eventAttr : ArrayList&lt;String&gt;) : void<BR/>+assignTransitionAttributes(ref : String, tranAttr : ArrayList&lt;String&gt;) : void<BR/>+addState(ref : String, stateName : String) : void<BR/>+addStates(ref : String, num : int) : void<BR/>+removeState(ref : String, stateName : String) : void<BR/>+renameState(ref : String, old : String, newNom : String) : void<BR/>+setStateAttribute(ref : String, stateName : String, attrib : String, inValue : boolean) : void<BR/>+addEvent(ref : String, eventName : String) : void<BR/>+addEvents(ref : String, num : int) : void<BR/>+removeEvent(ref : String, eventName : String) : void<BR/>+renameEvent(ref : String, old : String, newNom : String) : void<BR/>+setEventAttribute(ref : String, eventName : String, attrib : String, inValue : boolean) : void<BR/>+addTransition(ref : String, star : String, even : String, targ : String) : void<BR/>+removeTransition(ref : String, star : String, even : String, targ : String) : void<BR/>+setTransitionAttribute(ref : String, star : String, even : String, attrib : String, inValue : boolean) : void<BR/>+setFSMStateAttributes(ref : String, attri : ArrayList&lt;String&gt;) : void<BR/>+setFSMEventAttributes(ref : String, attri : ArrayList&lt;String&gt;) : void<BR/>+setFSMTransitionAttributes(ref : String, attri : ArrayList&lt;String&gt;) : void<BR/>+assignMemoryMeasure(m : MemoryMeasure) : void<BR/>+getLastProcessData() : MemoryMeasure<BR/>+getFSMStateList(ref : String) : ArrayList&lt;String&gt;<BR/>+getFSMStateAttributes(ref : String) : ArrayList&lt;String&gt;<BR/>+getFSMStateAttributeMap(ref : String) : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;<BR/>+getFSMEventList(ref : String) : ArrayList&lt;String&gt;<BR/>+getFSMEventAttributes(ref : String) : ArrayList&lt;String&gt;<BR/>+getFSMEventAttributeMap(ref : String) : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;<BR/>+getFSMTransitionList(ref : String) : ArrayList&lt;String&gt;<BR/>+getFSMTransitionAttributes(ref : String) : ArrayList&lt;String&gt;<BR/>+getFSMTransitionAttributeMap(ref : String) : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;<BR/>+getStateAttributeList() : String[]<BR/>+getEventAttributeList() : String[]<BR/>+getTransitionAttributeList() : String[]<BR/>+getReferences() : ArrayList&lt;String&gt;<BR/>-appendFSM(nom : String, fsm : TransitionSystem, overwrite : boolean) : String<BR/>-bail(ref : String) : boolean<BR/>-bail(ref : ArrayList&lt;String&gt;) : boolean<BR/>-bailMulti(ref : ArrayList&lt;String&gt;) : boolean}>];
	n63 [label = <{FiniteStateMachine|<b><i>+DOT_ADDRESS_VAR : String</i></b><BR/><b><i>+ADDRESS_SETTINGS : String</i></b><BR/><b><i>+ADDRESS_IMAGES : String</i></b><BR/><b><i>+ADDRESS_SOURCES : String</i></b><BR/><b><i>+ADDRESS_CONFIG : String</i></b><BR/><b><i>-DEFAULT_CONFIG_COMMENT : String</i></b><BR/><b><i>-SEPARATOR : String</i></b><BR/><b><i>-SYMBOL_FALSE : String</i></b><BR/><b><i>-SYMBOL_TRUE : String</i></b><BR/><b><i>-REGEX_NEWLINE_REPLACE : String</i></b><BR/>-view : FSMUI<BR/>-model : Manager|+FiniteStateMachine() : FiniteStateMachine<BR/>+receiveCode(code : int, mouseType : int) : void<BR/>+receiveKeyInput(code : char, keyType : int) : void<BR/>+updateViewFSM(ref : String) : void<BR/>-codeHandlingAdjustFSM(code : int, mouseType : int) : void<BR/>-codeHandlingOperations(code : int, mouseType : int) : void<BR/>-codeHandlingUStructure(code : int, mouseType : int) : void<BR/>-codeHandlingDisplay(code : int, mouseType : int) : void<BR/>-loadSource() : void<BR/>-saveFSM(currFSM : String) : void<BR/>-generateRandomFSM(code : int) : void<BR/>-addTransition(currFSM : String, code : int) : void<BR/>-removeTransition(currFSM : String, code : int) : void<BR/>-addAttributeLists(newStuff : ArrayList&lt;String&gt;, oldStuff : ArrayList&lt;String&gt;) : ArrayList&lt;String&gt;<BR/>-subtractAttributeLists(remv : ArrayList&lt;String&gt;, oldStuff : ArrayList&lt;String&gt;) : ArrayList&lt;String&gt;<BR/>-appendSingleChosenAttribute(in : String[], code : int) : void<BR/>-appendSingleChosenAttribute(in : ArrayList&lt;String&gt;, code : int) : void<BR/>-requestAttributeChoice(code : int, attributes : String[], phrase : String) : void<BR/>-requestFSMChoice(code : int) : void<BR/><i>+fileConfiguration() : void</i><BR/>-generateDotImage(ref : String) : String<BR/>-allotFSMToView(fsm : String) : void}>];
	n64 [label = <{FSMUI|<b><i>-PANEL_RATIO_VERTICAL : double</i></b><BR/><b><i>-WINDOW_NAME : String</i></b><BR/><b><i>-DEFAULT_POPUP_WIDTH : int</i></b><BR/><b><i>-DEFAULT_POPUP_HEIGHT : int</i></b><BR/>-frame : WindowFrame<BR/>-displayPageManager : DisplayPageManager<BR/>-optionPageManager : OptionPageManager<BR/>-reference : InputReceiver|+FSMUI(wid : int, hei : int, ref : InputReceiver) : FSMUI<BR/>-createPages() : void<BR/>+receiveCode(code : int, mouseType : int) : void<BR/>+receiveKeyInput(code : char, keyType : int) : void<BR/>+displayAlert(text : String) : void<BR/>+requestFolderPath(defDir : String, display : String) : String<BR/>+requestFilePath(defDir : String, display : String) : String<BR/>+requestUserInputList(refs : String[], search : boolean) : String<BR/>+requestUserInputList(refs : ArrayList&lt;String&gt;, search : boolean) : String<BR/>+requestUserInput(phrase : String) : String<BR/>+requestUserInput(phrase : String, size : int) : ArrayList&lt;String&gt;<BR/>+requestUserIntegerInput(phrase : String) : Integer<BR/>+requestAgentInput(inAgents : ArrayList&lt;String&gt;, events : ArrayList&lt;String&gt;, attrib : ArrayList&lt;String&gt;) : ArrayList&lt;String&gt;<BR/>+removeFSM(ref : String) : void<BR/>+updateFSMInfo(ref : String, stateAttrib : ArrayList&lt;String&gt;, eventAttrib : ArrayList&lt;String&gt;, tranAttrib : ArrayList&lt;String&gt;, stateMap : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;, eventMap : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;, transMap : HashMap&lt;String,ArrayList&lt;Boolean&gt;&gt;) : void<BR/>+updateFSMImage(ref : String, img : String) : void<BR/>+clearTextContents(code : int) : void<BR/>+startLoading() : void<BR/>+endLoading() : void<BR/>+updateDisplay() : void<BR/>+updateActiveOptionPage() : void<BR/>+updateDisplayPanel() : void<BR/>+setTextContent(code : int, posit : int, ref : String) : void<BR/>+assignSymbols(separator : String, tr : String, fal : String) : void<BR/>+getCurrentFSM() : String<BR/>+getTextContent(code : int) : String<BR/>+getTextContent(code : int, posit : int) : String<BR/>+getIntegerContent(code : int) : Integer<BR/>+getIntegerContent(code : int, posit : int) : Integer<BR/>+getCheckboxContent(code : int) : Boolean<BR/>+getContent(code : int) : ArrayList&lt;String&gt;<BR/>+retrieveFileReader(pathIn : String) : BufferedReader<BR/><i>+stripPath(in : String) : String</i>}>];
	n65 [label = <{EventRep|-event : String<BR/>-setVals : ArrayList&lt;Boolean&gt;|+EventRep(inEve : String, i : int) : EventRep<BR/>+toggle(i : int) : void<BR/>+getValues() : ArrayList&lt;Boolean&gt;<BR/>+getValue(i : int) : boolean<BR/>+getName() : String}>];
	n66 [label = <{ProcessClean|<i>-BAD_STATE_ATTRIBUTES : Exception</i><BR/><i>+attributeInitialRef : String</i><BR/><i>+attributeMarkedRef : String</i>|<i>+assignAttributeReferences(init : String, mark : String) : void</i><BR/><i>+trim(in : TransitionSystem) : TransitionSystem</i><BR/><i>+makeAccessible(in : TransitionSystem) : TransitionSystem</i><BR/><i>+makeCoAccessible(in : TransitionSystem) : TransitionSystem</i><BR/><i>-getCoAccessibleMap(in : TransitionSystem) : ArrayList&lt;String&gt;</i><BR/><i>-recursivelyFindMarked(curr : String, positive : HashSet&lt;String&gt;, negative : HashSet&lt;String&gt;, visited : HashSet&lt;String&gt;, in : TransitionSystem) : boolean</i>}>];
	n67 [label = <{GraphViz|-configFile : Properties<BR/>-osName : String<BR/>-cfgProp : String<BR/>-tempDir : String<BR/>-DOT : String<BR/>-graph : StringBuilder<BR/>-dpiSizes : int[]<BR/>-currentDpiPos : int<BR/><b><i>-serialVersionUID : long</i></b>|+GraphViz(workingPath : String, configPath : String) : GraphViz<BR/><i>+verifyDotPath(path : String) : boolean</i><BR/>+increaseDpi() : void<BR/>+decreaseDpi() : void<BR/>+writeGraphToFile(img : byte[], file : String) : int<BR/>+writeGraphToFile(img : byte[], to : File) : int<BR/>-writeDotSourceToFile(str : String) : File<BR/>+readSource(input : String) : void<BR/>+getImageDpi() : int<BR/>+getDotSource() : String<BR/>+getGraph(dot_source : String, type : String) : byte[]<BR/>-get_img_stream(dot : File, type : String) : byte[]<BR/>+start_subgraph(clusterid : int) : String<BR/>+end_subgraph() : String<BR/>+start_graph() : String<BR/>+end_graph() : String<BR/>+clearGraph() : void<BR/>+add(line : String) : void<BR/>+addln(line : String) : void<BR/>+addln() : void}>];
	n68 [label = <{CodeReference|<b><i>+CODE_GENERATE_IMAGE : int</i></b><BR/><b><i>+CODE_DISPLAY_CYCLE_VIEW : int</i></b><BR/><b><i>+CODE_ACCESS_NUM_STATES : int</i></b><BR/><b><i>+CODE_ACCESS_NUM_EVENTS : int</i></b><BR/><b><i>+CODE_ACCESS_NUM_TRANS : int</i></b><BR/><b><i>+CODE_ACCESS_FSM_NAME : int</i></b><BR/><b><i>+CODE_ACCESS_NON_DETERMINISTIC : int</i></b><BR/><b><i>+CODE_ACCESS_STATE_ATTRIBUTES : int</i></b><BR/><b><i>+CODE_ACCESS_EVENT_ATTRIBUTES : int</i></b><BR/><b><i>+CODE_ACCESS_TRANS_ATTRIBUTES : int</i></b><BR/><b><i>+CODE_ADD_STATE_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_ADD_EVENT_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_ADD_TRANS_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_GENERATE_FSM : int</i></b><BR/><b><i>+CODE_RENAME_FSM : int</i></b><BR/><b><i>+CODE_FSM_ADD_STATE_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_FSM_ACCESS_ADD_STATE_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_FSM_REMOVE_STATE_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_FSM_ACCESS_REMOVE_STATE_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_FSM_ADD_EVENT_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_FSM_ACCESS_ADD_EVENT_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_FSM_REMOVE_EVENT_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_FSM_ACCESS_REMOVE_EVENT_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_FSM_ADD_TRANS_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_FSM_ACCESS_ADD_TRANS_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_FSM_REMOVE_TRANS_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_FSM_ACCESS_REMOVE_TRANS_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_ADD_STATE : int</i></b><BR/><b><i>+CODE_REMOVE_STATE : int</i></b><BR/><b><i>+CODE_RENAME_STATE : int</i></b><BR/><b><i>+CODE_ADD_STATES : int</i></b><BR/><b><i>+CODE_EDIT_STATE_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_ADD_EDIT_STATE_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_ACCESS_EDIT_STATE : int</i></b><BR/><b><i>+CODE_ADD_EVENT : int</i></b><BR/><b><i>+CODE_REMOVE_EVENT : int</i></b><BR/><b><i>+CODE_RENAME_EVENT : int</i></b><BR/><b><i>+CODE_ADD_EVENTS : int</i></b><BR/><b><i>+CODE_EDIT_EVENT_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_ADD_EDIT_EVENT_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_ACCESS_EDIT_EVENT : int</i></b><BR/><b><i>+CODE_ADD_TRANSITION : int</i></b><BR/><b><i>+CODE_REMOVE_TRANSITION : int</i></b><BR/><b><i>+CODE_EDIT_TRANS_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_ADD_EDIT_TRANS_ATTRIBUTE : int</i></b><BR/><b><i>+CODE_ACCESS_EDIT_TRANS : int</i></b><BR/><b><i>+CODE_SAVE_FSM : int</i></b><BR/><b><i>+CODE_SAVE_IMG : int</i></b><BR/><b><i>+CODE_SAVE_TKZ : int</i></b><BR/><b><i>+CODE_SAVE_SVG : int</i></b><BR/><b><i>+CODE_LOAD_SOURCE : int</i></b><BR/><b><i>+CODE_DELETE_SOURCE : int</i></b><BR/><b><i>+CODE_DUPLICATE_FSM : int</i></b><BR/><b><i>+CODE_CLOSE_FSM : int</i></b><BR/><b><i>+CODE_TRIM : int</i></b><BR/><b><i>+CODE_ACCESSIBLE : int</i></b><BR/><b><i>+CODE_CO_ACCESSIBLE : int</i></b><BR/><b><i>+CODE_OBSERVER : int</i></b><BR/><b><i>+CODE_PRODUCT_SELECT : int</i></b><BR/><b><i>+CODE_PRODUCT : int</i></b><BR/><b><i>+CODE_PARALLEL_COMPOSITION_SELECT : int</i></b><BR/><b><i>+CODE_PARALLEL_COMPOSITION : int</i></b><BR/><b><i>+CODE_SUP_CNT_SBL_SELECT : int</i></b><BR/><b><i>+CODE_SUP_CNT_SBL : int</i></b><BR/><b><i>+CODE_UNDER_FSM : int</i></b><BR/><b><i>+CODE_OPT_OPQ_CONTROLLER : int</i></b><BR/><b><i>+CODE_OPT_SPVR_SELECT : int</i></b><BR/><b><i>+CODE_OPT_SPVR : int</i></b><BR/><b><i>+CODE_GRT_LWR_BND_SELECT : int</i></b><BR/><b><i>+CODE_GRT_LWR_BND : int</i></b><BR/><b><i>+CODE_PRUNE : int</i></b><BR/><b><i>+CODE_BLOCKING : int</i></b><BR/><b><i>+CODE_STATE_EXISTS : int</i></b><BR/><b><i>+CODE_SELECT_PLANT : int</i></b><BR/><b><i>+CODE_ADD_BAD_TRANS : int</i></b><BR/><b><i>+CODE_BUILD_AGENTS : int</i></b><BR/><b><i>+CODE_BUILD_USTRUCT : int</i></b><BR/><b><i>+CODE_TOGGLE_USTRUCT : int</i></b><BR/><b><i>+CODE_DISPLAY_BAD_TRANS_START : int</i></b>|}>];
	n69 [label = <{Operations|<b><i>-HEADER : String</i></b><BR/><b><i>-CATEGORY_TRANS_SYSTEMS : String</i></b><BR/><b><i>-CATEGORY_FSM : String</i></b><BR/><b><i>-CATEGORY_QUERIES : String</i></b><BR/><b><i>-CATEGORIES : String[]</i></b><BR/><b><i>-HELP : String</i></b>|+Operations() : Operations}>];
	n70 [label = <{&lt;&lt;interface&gt;&gt;<BR/>InputHandler||<u>+receiveCode(code : int, mouseType : int) : void</u><BR/><u>+receiveKeyInput(code : char, keyType : int) : void</u>}>];
	n71 [label = <{&lt;&lt;interface&gt;&gt;<BR/>ReceiveMemoryMeasure||<u>+assignMemoryMeasure(m : MemoryMeasure) : void</u>}>];
	n72 [label = <{&lt;&lt;interface&gt;&gt;<BR/>MemoryMeasure||<u>+getAverageMemoryUsage() : double</u><BR/><u>+getMaximumMemoryUsage() : double</u><BR/><u>+produceOutputLog() : String</u><BR/><u>+getOutputGuide() : ArrayList&lt;String&gt;</u><BR/><u>+getStoredData() : ArrayList&lt;Double&gt;</u><BR/><u>+getReserveSystem() : TransitionSystem</u><BR/><u>+reserveTransitionSystem(in : TransitionSystem) : void</u>}>];
	n73 [label = <{&lt;&lt;interface&gt;&gt;<BR/>InputReceiver||<u>+receiveCode(code : int, mouseType : int) : void</u><BR/><u>+receiveKeyInput(code : char, keyType : int) : void</u>}>];
	n74 [label = <{&lt;&lt;interface&gt;&gt;<BR/>DecideCondition||<u>+decideCondition() : boolean</u><BR/><u>+constructDeciderCoobs(events : ArrayList&lt;String&gt;, specStart : TransitionSystem, attr : ArrayList&lt;String&gt;, agents : ArrayList&lt;Agent&gt;) : DecideCondition</u><BR/><u>+getCounterExamples() : HashSet&lt;IllegalConfig&gt;</u><BR/><u>+addComponent(next : TransitionSystem, plant : boolean) : void</u><BR/><u>+produceMemoryMeasure() : MemoryMeasure</u>}>];
	subgraph cluster_{
		label = "";
		fontsize = 30;
		penwidth = 1;
		subgraph cluster_controller{
			label = "controller";
			fontsize = 26;
			penwidth = 2;
			n63;
			n11;
			n68;
			n12;
			n73;
			subgraph cluster_controller_convert{
				label = "controller.convert";
				fontsize = 22;
				penwidth = 3;
				n39;
				n67;
				n25;
			}
		}
		subgraph cluster_model{
			label = "model";
			fontsize = 26;
			penwidth = 2;
			n62;
			n60;
			subgraph cluster_model_convert{
				label = "model.convert";
				fontsize = 22;
				penwidth = 3;
				n29;
				n18;
				n21;
				n35;
			}
			subgraph cluster_model_fsm{
				label = "model.fsm";
				fontsize = 22;
				penwidth = 3;
				n47;
				subgraph cluster_model_fsm_component{
					label = "model.fsm.component";
					fontsize = 18;
					penwidth = 4;
					n16;
					n46;
					n57;
					n28;
					subgraph cluster_model_fsm_component_transition{
						label = "model.fsm.component.transition";
						fontsize = 14;
						penwidth = 5;
						n17;
						n15;
					}
				}
			}
			subgraph cluster_model_process{
				label = "model.process";
				fontsize = 22;
				penwidth = 3;
				n8;
				n32;
				n66;
				n41;
				n22;
				subgraph cluster_model_process_coobservability{
					label = "model.process.coobservability";
					fontsize = 18;
					penwidth = 4;
					n43;
					n58;
					n36;
					subgraph cluster_model_process_coobservability_deciding{
						label = "model.process.coobservability.deciding";
						fontsize = 14;
						penwidth = 5;
						n54;
						n1;
						n34;
						n74;
					}
					subgraph cluster_model_process_coobservability_support{
						label = "model.process.coobservability.support";
						fontsize = 14;
						penwidth = 5;
						n53;
						n44;
						n19;
						n6;
						n24;
						n26;
						n42;
					}
				}
				subgraph cluster_model_process_memory{
					label = "model.process.memory";
					fontsize = 18;
					penwidth = 4;
					n45;
					n2;
					n71;
					n40;
					n72;
				}
			}
		}
		subgraph cluster_test{
			label = "test";
			fontsize = 26;
			penwidth = 2;
			n37;
			n55;
			subgraph cluster_test_help{
				label = "test.help";
				fontsize = 22;
				penwidth = 3;
				n33;
				n48;
				n56;
				n59;
			}
		}
		subgraph cluster_ui{
			label = "ui";
			fontsize = 26;
			penwidth = 2;
			n64;
			n70;
			subgraph cluster_ui_headers{
				label = "ui.headers";
				fontsize = 22;
				penwidth = 3;
				n0;
			}
			subgraph cluster_ui_page{
				label = "ui.page";
				fontsize = 22;
				penwidth = 3;
				subgraph cluster_ui_page_displaypage{
					label = "ui.page.displaypage";
					fontsize = 18;
					penwidth = 4;
					n52;
					n31;
					n3;
					n5;
				}
				subgraph cluster_ui_page_optionpage{
					label = "ui.page.optionpage";
					fontsize = 18;
					penwidth = 4;
					n38;
					n10;
					n7;
					subgraph cluster_ui_page_optionpage_entryset{
						label = "ui.page.optionpage.entryset";
						fontsize = 14;
						penwidth = 5;
						n9;
						n4;
						n23;
						n13;
						n14;
						n50;
						n61;
					}
					subgraph cluster_ui_page_optionpage_implementation{
						label = "ui.page.optionpage.implementation";
						fontsize = 14;
						penwidth = 5;
						n30;
						n49;
						n69;
					}
				}
			}
			subgraph cluster_ui_popups{
				label = "ui.popups";
				fontsize = 22;
				penwidth = 3;
				n20;
				n65;
				n27;
				n51;
			}
		}
	}
	n0 -> n70[arrowhead=normal];
	n1 -> n47[arrowhead=normal];
	n1 -> n8[arrowhead=normal];
	n1 -> n43[arrowhead=normal];
	n1 -> n42[arrowhead=normal];
	n1 -> n26[arrowhead=normal];
	n1 -> n24[arrowhead=normal];
	n1 -> n44[arrowhead=normal];
	n1 -> n19[arrowhead=normal];
	n1 -> n72[arrowhead=normal];
	n1 -> n1[arrowhead=none];
	n1 -> n74[arrowhead=onormal, style=dashed];
	n2 -> n40[arrowhead=onormal];
	n5 -> n68[arrowhead=normal];
	n5 -> n70[arrowhead=normal];
	n5 -> n31[arrowhead=normal];
	n5 -> n3[arrowhead=normal];
	n7 -> n4[arrowhead=normal];
	n7 -> n38[arrowhead=none];
	n8 -> n47[arrowhead=normal];
	n8 -> n71[arrowhead=normal];
	n8 -> n32[arrowhead=normal];
	n8 -> n41[arrowhead=normal];
	n8 -> n66[arrowhead=normal];
	n8 -> n22[arrowhead=normal];
	n9 -> n4[arrowhead=onormal];
	n10 -> n70[arrowhead=normal];
	n10 -> n0[arrowhead=normal];
	n10 -> n49[arrowhead=normal];
	n10 -> n69[arrowhead=normal];
	n10 -> n30[arrowhead=normal];
	n10 -> n38[arrowhead=normal];
	n11 -> n63[arrowhead=normal];
	n12 -> n67[arrowhead=normal];
	n12 -> n63[arrowhead=none];
	n13 -> n4[arrowhead=onormal];
	n14 -> n9[arrowhead=onormal];
	n15 -> n17[arrowhead=normal];
	n15 -> n15[arrowhead=none];
	n16 -> n57[arrowhead=normal];
	n16 -> n16[arrowhead=none];
	n17 -> n57[arrowhead=onormal];
	n17 -> n17[arrowhead=onormal, style=dashed];
	n18 -> n47[arrowhead=normal];
	n19 -> n44[arrowhead=onormal];
	n19 -> n19[arrowhead=onormal, style=dashed];
	n20 -> n65[arrowhead=normal];
	n22 -> n47[arrowhead=normal];
	n22 -> n66[arrowhead=normal];
	n23 -> n4[arrowhead=onormal];
	n24 -> n26[arrowhead=normal];
	n26 -> n26[arrowhead=onormal, style=dashed];
	n27 -> n20[arrowhead=normal];
	n27 -> n65[arrowhead=normal];
	n28 -> n28[arrowhead=none];
	n29 -> n29[arrowhead=none];
	n30 -> n38[arrowhead=onormal];
	n30 -> n68[arrowhead=normal];
	n32 -> n47[arrowhead=normal];
	n33 -> n48[arrowhead=normal];
	n34 -> n47[arrowhead=normal];
	n34 -> n8[arrowhead=normal];
	n34 -> n36[arrowhead=normal];
	n34 -> n42[arrowhead=normal];
	n34 -> n24[arrowhead=normal];
	n34 -> n44[arrowhead=normal];
	n34 -> n72[arrowhead=normal];
	n34 -> n34[arrowhead=none];
	n34 -> n74[arrowhead=onormal, style=dashed];
	n35 -> n60[arrowhead=normal];
	n35 -> n47[arrowhead=normal];
	n35 -> n29[arrowhead=normal];
	n36 -> n2[arrowhead=onormal];
	n36 -> n47[arrowhead=normal];
	n36 -> n42[arrowhead=normal];
	n36 -> n26[arrowhead=normal];
	n36 -> n53[arrowhead=normal];
	n36 -> n6[arrowhead=normal];
	n36 -> n24[arrowhead=normal];
	n37 -> n63[arrowhead=normal];
	n37 -> n39[arrowhead=normal];
	n37 -> n60[arrowhead=normal];
	n37 -> n62[arrowhead=normal];
	n38 -> n70[arrowhead=normal];
	n38 -> n61[arrowhead=normal];
	n39 -> n25[arrowhead=normal];
	n39 -> n67[arrowhead=normal];
	n40 -> n47[arrowhead=normal];
	n40 -> n40[arrowhead=none];
	n40 -> n72[arrowhead=onormal, style=dashed];
	n41 -> n47[arrowhead=normal];
	n41 -> n58[arrowhead=normal];
	n41 -> n43[arrowhead=normal];
	n41 -> n36[arrowhead=normal];
	n41 -> n34[arrowhead=normal];
	n41 -> n54[arrowhead=normal];
	n41 -> n1[arrowhead=normal];
	n41 -> n42[arrowhead=normal];
	n41 -> n71[arrowhead=normal];
	n42 -> n46[arrowhead=normal];
	n43 -> n40[arrowhead=onormal];
	n43 -> n47[arrowhead=normal];
	n43 -> n42[arrowhead=normal];
	n43 -> n44[arrowhead=normal];
	n44 -> n44[arrowhead=none];
	n45 -> n40[arrowhead=onormal];
	n45 -> n72[arrowhead=normal];
	n46 -> n57[arrowhead=normal];
	n46 -> n46[arrowhead=none];
	n47 -> n60[arrowhead=normal];
	n47 -> n46[arrowhead=normal];
	n47 -> n16[arrowhead=normal];
	n47 -> n15[arrowhead=normal];
	n47 -> n47[arrowhead=none];
	n48 -> n60[arrowhead=normal];
	n49 -> n38[arrowhead=onormal];
	n49 -> n68[arrowhead=normal];
	n50 -> n4[arrowhead=onormal];
	n52 -> n68[arrowhead=normal];
	n52 -> n0[arrowhead=normal];
	n52 -> n5[arrowhead=normal];
	n52 -> n31[arrowhead=normal];
	n52 -> n70[arrowhead=onormal, style=dashed];
	n53 -> n53[arrowhead=onormal, style=dashed];
	n54 -> n34[arrowhead=onormal];
	n54 -> n47[arrowhead=normal];
	n54 -> n42[arrowhead=normal];
	n54 -> n74[arrowhead=normal];
	n54 -> n54[arrowhead=none];
	n55 -> n63[arrowhead=normal];
	n55 -> n39[arrowhead=normal];
	n55 -> n60[arrowhead=normal];
	n55 -> n62[arrowhead=normal];
	n55 -> n47[arrowhead=normal];
	n55 -> n58[arrowhead=normal];
	n55 -> n33[arrowhead=normal];
	n55 -> n48[arrowhead=normal];
	n55 -> n59[arrowhead=normal];
	n55 -> n56[arrowhead=normal];
	n56 -> n60[arrowhead=normal];
	n56 -> n62[arrowhead=normal];
	n56 -> n47[arrowhead=normal];
	n56 -> n48[arrowhead=normal];
	n57 -> n28[arrowhead=normal];
	n57 -> n57[arrowhead=none];
	n58 -> n45[arrowhead=onormal];
	n58 -> n47[arrowhead=normal];
	n58 -> n74[arrowhead=normal];
	n58 -> n42[arrowhead=normal];
	n58 -> n24[arrowhead=normal];
	n59 -> n60[arrowhead=normal];
	n59 -> n62[arrowhead=normal];
	n59 -> n48[arrowhead=normal];
	n59 -> n33[arrowhead=normal];
	n60 -> n60[arrowhead=none];
	n61 -> n4[arrowhead=normal];
	n61 -> n23[arrowhead=normal];
	n61 -> n9[arrowhead=normal];
	n61 -> n14[arrowhead=normal];
	n61 -> n13[arrowhead=normal];
	n61 -> n50[arrowhead=normal];
	n62 -> n35[arrowhead=normal];
	n62 -> n21[arrowhead=normal];
	n62 -> n18[arrowhead=normal];
	n62 -> n47[arrowhead=normal];
	n62 -> n8[arrowhead=normal];
	n62 -> n72[arrowhead=normal];
	n62 -> n60[arrowhead=normal];
	n62 -> n71[arrowhead=onormal, style=dashed];
	n63 -> n39[arrowhead=normal];
	n63 -> n60[arrowhead=normal];
	n63 -> n62[arrowhead=normal];
	n63 -> n64[arrowhead=normal];
	n63 -> n68[arrowhead=normal];
	n63 -> n73[arrowhead=onormal, style=dashed];
	n64 -> n73[arrowhead=normal];
	n64 -> n52[arrowhead=normal];
	n64 -> n10[arrowhead=normal];
	n64 -> n27[arrowhead=normal];
	n64 -> n51[arrowhead=normal];
	n64 -> n64[arrowhead=none];
	n64 -> n70[arrowhead=onormal, style=dashed];
	n66 -> n47[arrowhead=normal];
	n69 -> n38[arrowhead=onormal];
	n69 -> n68[arrowhead=normal];
	n71 -> n72[arrowhead=normal];
	n72 -> n47[arrowhead=normal];
	n74 -> n47[arrowhead=normal];
	n74 -> n42[arrowhead=normal];
	n74 -> n24[arrowhead=normal];
	n74 -> n72[arrowhead=normal];
	n74 -> n74[arrowhead=none];

}